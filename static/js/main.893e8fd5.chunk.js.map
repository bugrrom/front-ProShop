{"version":3,"sources":["serviceWorker.ts","element/Footer/Footer.tsx","bus/productCart/Rating/Rating.tsx","bus/productCart/ProductCart.tsx","api/api.ts","bus/homeScreen/HomeScreen.tsx","bus/homeScreen/action.ts","bus/homeScreen/types.ts","element/Selector/Selector.tsx","element/Button/ButtonAddToCart.tsx","bus/productScreen/productBuy/ProductBuy.tsx","bus/productScreen/productInfo/ProductInfo.tsx","element/Button/ButtonGoback.tsx","bus/productScreen/ProductScreen.tsx","bus/productScreen/action.ts","bus/productScreen/types.ts","bus/cartScreen/cartProductItem/CartProductItem.tsx","bus/cartScreen/subtotalItems/SubtotalItems.tsx","bus/cartScreen/action.ts","bus/cartScreen/types.ts","bus/cartScreen/cartScreen.tsx","element/Message/Message/Message.tsx","element/Message/ErrorMessages/ErrorMessages.tsx","element/InputElement/InputElement.tsx","bus/authScreen/login/Login.tsx","bus/authScreen/login/action.ts","bus/authScreen/login/types.ts","bus/authScreen/registration/Registration.tsx","bus/authScreen/registration/action.ts","bus/authScreen/registration/types.ts","bus/profileScreen/formUpdate/FormUpdate.tsx","bus/profileScreen/myOrders/MyOrders.tsx","bus/profileScreen/ProfileScreen.tsx","bus/profileScreen/action.ts","bus/profileScreen/types.ts","bus/orderScreen/action.ts","bus/orderScreen/types.ts","bus/header/Menu.tsx","bus/header/Header.tsx","element/CheckoutSteps/CheckoutSteps.tsx","bus/shippingScreen/shippingForm/ShippingForm.tsx","bus/shippingScreen/ShippingScreen.tsx","bus/paymentScreen/PaymentScreen.tsx","bus/paymentScreen/orderSummary/InfoBlock/InfoBlock.tsx","bus/paymentScreen/orderSummary/OrderSummary.tsx","bus/placeOrderScreen/orderItem/OrderItems.tsx","bus/placeOrderScreen/PlaceOrderScreen.tsx","bus/placeOrderScreen/action.ts","bus/placeOrderScreen/types.ts","bus/orderScreen/OrderSummary/InfoBlock/InfoBlock.tsx","bus/orderScreen/OrderSummary/OrderSumm.tsx","bus/orderScreen/OrderScreen.tsx","bus/adminScreen/products/Modal/ModalProduct.tsx","bus/adminScreen/products/productDashboard/ProductsDashboard.tsx","utils/deepEqual.ts","bus/adminScreen/products/Produtcts.tsx","bus/adminScreen/products/action.ts","bus/adminScreen/products/types.ts","bus/adminScreen/products/createProduct/CreateProduct.tsx","bus/adminScreen/allUsers/Modal/ModalProfile.tsx","bus/adminScreen/allUsers/userDashboard/userDashboard.tsx","bus/adminScreen/allUsers/Users.tsx","bus/adminScreen/allUsers/action.ts","bus/adminScreen/allUsers/types.ts","bus/adminScreen/allOrder/orderDashboard/orderDashboard.tsx","bus/adminScreen/allOrder/Order.tsx","bus/adminScreen/allOrder/action.ts","bus/adminScreen/allOrder/types.ts","element/App/App.tsx","bus/homeScreen/productsReducer.ts","bus/productScreen/productReducer.ts","bus/cartScreen/cartReducer.ts","bus/authScreen/login/loginReducer.ts","bus/authScreen/registration/registerReducer.ts","bus/profileScreen/profileUpdateReducer.ts","bus/placeOrderScreen/orderReducer.ts","bus/orderScreen/orderDetailsReducer.ts","bus/adminScreen/products/productAdminReducer.ts","bus/adminScreen/allUsers/usersAdminReducer.ts","bus/adminScreen/allOrder/orderAdminReducer.ts","init/rootReducer.ts","init/store.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","Footer","styled","footer","RatingStyle","div","Span","span","Rating","value","text","color","number","Array","fill","map","el","index","key","style","className","Number","defaultProps","ProductCart","Img","img","H3","h3","Product","product","to","_id","src","image","alt","name","rating","numReviews","margin","price","apiFetch","token","data","url","this","method","headers","Authorization","body","JSON","stringify","fetch","getUrl","getConfigAuth","console","log","postConfigAuth","putConfigAuth","deleteConfigAuth","Mains","main","H1","h1","HomeScreen","dispatch","useDispatch","useEffect","a","type","get","response","json","status","payload","message","productList","useSelector","state","products","loading","error","Container","Selector","select","Selectors","params","onChange","e","target","defaultValue","Button","button","ButtonAddToCart","props","onClick","disabled","ProductWrapper","P","p","ProductBuy","countInStock","addToCartHandler","marginRight","Line","ProductInfos","description","ButtonGoBack","link","Wrapper","ProductScreen","history","useState","qty","setQty","id","push","CartItem","I","i","CartProductItem","stock","updateCart","removeProductCart","Containers","SubtotalItems","purchases","sum","addToCart","getState","cart","cartItems","localStorage","setItem","CartScreen","productId","search","split","qrt","reduce","acc","item","toFixed","length","disabledButton","Message","backgroundColor","ErrorMessages","msg","Label","label","InputWrapper","InputElement","placeholder","htmlFor","Login","userLogin","userInfo","onSubmit","values","email","password","user","config","redirect","initialValues","actions","validationSchema","Yup","required","min","max","preventDefault","Registration","newUser","Register","repeatPassword","test","parent","FormUpdate","React","memo","WrapperTable","Table","table","Tbody","tbody","Thead","thead","Tr","tr","Th","th","Td","td","MyOrder","order","createdAt","substring","totalPrice","isDelivered","ProfileScreen","userDetails","userUpdate","allOrder","orderDetails","setName","setEmail","up","put","Nav","Dropdown","Dropbtn","DropdownContent","Logout","Menu","isAdmin","removeItem","StyleHeader","header","NavbarBrand","Navbar","Header","CheckoutSteps","step1","step2","step3","step4","opacity","styleForm","width","ShippingForm","initialState","address","city","postalCode","country","ShippingScreen","shippingAddress","PaymentScreen","paymentMethod","payment","InfoBlock","results","OrderSummary","itemsSum","shipping","tax","total","addOrder","OrderItem","WrapperCheckout","ContainerInformation","OrderItems","PlaceOrderScreen","Total","orderCreate","display","flexDirection","minWidth","addNewOrder","orderItems","itemsPrice","shippingPrice","taxPrice","String","OrderSumm","OrderScreen","isPaid","Modal","ModelContext","Success","ModalProduct","productInfo","updateProduct","successDetails","brand","category","success","setSuccess","setTimeout","fontSize","as","ButtonCreate","ProductsDashboard","editMode","productCreate","removeProduct","deepEqual","obj1","obj2","AdminAllProducts","Products","adminProduct","allProduct","loadingAll","oneProduct","activeModal","setActive","update","confirm","delete","deleteProduct","getOneProduct","CreateProduct","productSuccess","post","addProduct","uploadFileHandler","file","files","formData","FormData","append","multiple","ModalProfile","successUpdate","UserDashboard","users","removeUser","UsersAdmin","usersList","adminUser","allUsers","loadingUsers","loadingDetails","updateUser","deleteUser","getUserByEdit","OlderDashboard","loadingOrders","AdminAllOrder","Order","adminOrder","App","exact","path","component","reviews","loadingOne","loadingDelete","loadingAdd","loadingEdit","successUsers","loadingUser","loadingRemove","oneOrder","rootReducer","combineReducers","action","existItem","find","x","filter","userRegister","cartItemsFromStorage","getItem","parse","userInfoFromStorage","shippingAddressFromStorage","paymentMethods","store","createStore","applyMiddleware","thunk","render","StrictMode","styles","css","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.893e8fd5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Message during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import styled from \"@emotion/styled\";\n\nexport const Footer = styled.footer`\n  width: 100%;\n  min-height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\ntype typeProps = {\n  value: number;\n  text: string;\n  color?: string;\n};\n\nconst RatingStyle = styled.div``;\n\nconst Span = styled.span`\n  font-size: 12px;\n`;\n\nexport const Rating: FC<typeProps> = ({ value, text, color }: typeProps) => {\n  const number = new Array(5).fill(\"\").map((el, index) => el + (index + 1));\n  return (\n    <RatingStyle>\n      {number.map((el) => (\n        <span key={el}>\n          <i\n            style={{ color }}\n            className={\n              value >= el\n                ? \"fas fa-star\"\n                : value >= Number(el) - 0.5\n                ? \"fas fa-start-half-alt\"\n                : \"far fa-star\"\n            }\n          ></i>\n        </span>\n      ))}\n      <Span> {text && text}</Span>\n    </RatingStyle>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { Rating } from \"./Rating/Rating\";\nimport { productObj } from \"../../products\";\n\nconst ProductCart = styled.div`\n  height: 310px;\n  width: 200px;\n  border: 1px solid #2a2b2b;\n  border-radius: 3px;\n  margin: 10px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nconst Img = styled.img`\n  width: 200px;\n`;\n\nconst H3 = styled.h3`\n  font-size: 13px;\n  font-weight: 600;\n`;\n\nexport type typeProps = {\n  product: productObj;\n};\n\nexport const Product: FC<typeProps> = ({ product }: typeProps) => {\n  return (\n    <ProductCart>\n      <Link to={`/product/${product._id}`}>\n        <Img src={product.image} alt={product.name} />\n        <H3>{product.name}</H3>\n      </Link>\n      <div>\n        <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n      </div>\n      <h3 style={{ margin: 0 }}>${product.price}</h3>\n    </ProductCart>\n  );\n};\n","export class apiFetch {\n  private url: any;\n  private token: string | undefined;\n  private data: any | undefined;\n\n  constructor(token?: string, data?: any) {\n    this.token = token;\n    this.data = data;\n    this.url = \"http://localhost:4000/\";\n  }\n\n  getUrl() {\n    return this.url;\n  }\n\n  getConfigAuth(token: string) {\n    return {\n      method: \"GET\",\n      headers: {\n        Authorization: `Basic ${token}`,\n      },\n    };\n  }\n\n  putConfigAuth(token: string, data: any) {\n    return {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${token}`,\n      },\n      body: JSON.stringify(data),\n    };\n  }\n\n  postConfigAuth(token: string, data: any) {\n    return {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${token}`,\n      },\n      body: JSON.stringify(data),\n    };\n  }\n\n  deleteConfigAuth(token: string, data: any) {\n    return {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${token}`,\n      },\n      body: JSON.stringify(data),\n    };\n  }\n\n  async get(url: string) {\n    try {\n      if (this.token) {\n        const data = await fetch(\n          `${this.getUrl()}${url}`,\n          this.getConfigAuth(this.token)\n        );\n        return data;\n      }\n      const data = await fetch(`${this.getUrl()}${url}`);\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async post(url: string) {\n    try {\n      if (this.token) {\n        const data = await fetch(\n          `${this.getUrl()}${url}`,\n          this.postConfigAuth(this.token, this.data)\n        );\n        return data;\n      }\n      const data = await fetch(`${this.getUrl()}${url}`);\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async put(url: string) {\n    try {\n      if (this.token) {\n        const data = await fetch(\n          `${this.getUrl()}${url}`,\n          this.putConfigAuth(this.token, this.data)\n        );\n        return data;\n      }\n      const data = await fetch(`${this.getUrl()}${url}`);\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async delete(url: string) {\n    try {\n      if (this.token) {\n        const data = await fetch(\n          `${this.getUrl()}${url}`,\n          this.deleteConfigAuth(this.token, this.data)\n        );\n        return data;\n      }\n      const data = await fetch(`${this.getUrl()}${url}`);\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport { Product } from \"../productCart/ProductCart\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProducts } from \"./action\";\nimport { AppState } from \"../../init/rootReducer\";\n\nconst Mains = styled.main`\n  min-height: 80vh;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  @media (max-width: 1200px) {\n    justify-content: space-around;\n  }\n`;\n\nconst H1 = styled.h1`\n  margin-left: 10px;\n`;\n\nexport const HomeScreen: FC = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n  const productList = useSelector((state: AppState) => state.products);\n  const { loading, error, products } = productList;\n\n  return (\n    <>\n      <H1>Latest Products</H1>\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h3>{error}</h3>\n      ) : (\n        <Mains>\n          {products.map((product) => (\n            <Product key={product._id} product={product} />\n          ))}\n        </Mains>\n      )}\n    </>\n  );\n};\n","import {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n} from \"./types\";\nimport { Dispatch } from \"redux\";\nimport { apiFetch } from \"../../api/api\";\n\nexport const listProducts = () => async (dispatch: Dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n    const response = await new apiFetch().get(\"api/product\");\n    let data;\n    if (response) {\n      data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: PRODUCT_LIST_FAIL,\n          payload: data.message,\n        });\n      }\n    }\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (e) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: e.message });\n  }\n};\n","import { typeProduct } from \"./productsReducer\";\n\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport type productListRequest = {\n  type: typeof PRODUCT_LIST_REQUEST;\n};\n\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport type productListSuccess = {\n  type: typeof PRODUCT_LIST_SUCCESS;\n  payload: typeProduct[];\n};\n\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\nexport type productListFail = {\n  type: typeof PRODUCT_LIST_FAIL;\n  payload: string;\n};\n\nexport type typeActionProducts =\n  | productListRequest\n  | productListSuccess\n  | productListFail;\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-areas: \"select\";\n  -webkit-box-align: center;\n  align-items: center;\n  position: relative;\n  min-width: 3ch;\n  max-width: 10ch;\n  min-height: 1ch;\n  max-height: 2ch;\n  border: 1px solid #909292;\n  border-radius: 0.25em;\n  padding: 0.25em 0.5em;\n  font-size: 1.25rem;\n  cursor: pointer;\n  line-height: 1.1;\n  background-color: #fff;\n  background-image: -webkit-gradient(\n    linear,\n    left bottom,\n    left top,\n    from(#f9f9f9),\n    color-stop(33%, #fff)\n  );\n  background-image: linear-gradient(to top, #f9f9f9, #fff 33%);\n`;\n\nconst Selector = styled.select`\n  background-color: transparent;\n  border: none;\n  padding: 0 1em 0 0;\n  margin: 0;\n  width: 100%;\n  font-family: inherit;\n  font-size: inherit;\n  cursor: inherit;\n  line-height: inherit;\n  z-index: 1;\n  outline: none;\n`;\n\ntype typeProps = {\n  params: string[];\n  onChange: (e: string) => void;\n  value?: number;\n};\n\nexport const Selectors: FC<typeProps> = ({\n  params,\n  onChange,\n  value,\n}: typeProps) => {\n  const Change = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(e.target.value);\n  };\n  return (\n    <Container onChange={Change}>\n      <Selector defaultValue={value}>\n        {params.map((el, index) => (\n          <option key={el + index}>{el}</option>\n        ))}\n      </Selector>\n    </Container>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\n\nconst Button = styled.button`\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 60px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\ntype typeProps = {\n  disabled: boolean;\n  onClick: () => void;\n  text: string;\n};\n\nexport const ButtonAddToCart: FC<typeProps> = (props: typeProps) => {\n  return (\n    <Button onClick={props.onClick} disabled={props.disabled}>\n      {props.text}\n    </Button>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { Selectors } from \"../../../element/Selector/Selector\";\nimport { ButtonAddToCart } from \"../../../element/Button/ButtonAddToCart\";\n\nconst ProductWrapper = styled.div`\n  display: flex;\n  width: 230px;\n  justify-content: space-around;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid black;\n  @media (max-width: 1200px) {\n    margin-top: 40px;\n  }\n`;\n\nconst P = styled.p`\n  text-transform: uppercase;\n`;\n\nconst Container = styled.div`\n  border-bottom: 1px solid black;\n  width: 100%;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ntype typeProps = {\n  price: number;\n  countInStock: number;\n  onChange: (e: any) => void;\n  addToCartHandler: () => void;\n};\n\nexport const ProductBuy: FC<typeProps> = ({\n  price,\n  countInStock,\n  onChange,\n  addToCartHandler,\n}: typeProps) => {\n  const params = new Array(countInStock)\n    .fill(\"\")\n    .map((el, index) => el + (index + 1));\n  return (\n    <div>\n      <ProductWrapper>\n        <Container>\n          <P>Price: ${price}</P>\n        </Container>\n        <Container>\n          <P>Status: {countInStock > 0 ? \" In Stock\" : \"Out Of Stock\"}</P>\n        </Container>\n        {countInStock > 0 ? (\n          <Container>\n            <P style={{ marginRight: 10 }}>Qty:</P>\n            <Selectors onChange={onChange} params={params} />\n          </Container>\n        ) : null}\n        <ButtonAddToCart\n          disabled={countInStock <= 0}\n          onClick={addToCartHandler}\n          text=\"Add to cart\"\n        />\n      </ProductWrapper>\n    </div>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC } from \"react\";\nimport { Rating } from \"../../productCart/Rating/Rating\";\n\nconst Container = styled.div`\n  width: 270px;\n  margin: 25px 30px 0 30px;\n  h3 {\n    font-size: 25px;\n    text-transform: uppercase;\n    color: #909292;\n  }\n`;\n\nconst Line = styled.div`\n  height: 1px;\n  background-color: black;\n  margin: 15px 0;\n`;\n\ntype typeProps = {\n  name: string;\n  numReviews: number;\n  rating: number;\n  price: number;\n  description: string;\n};\n\nexport const ProductInfos: FC<typeProps> = ({\n  name,\n  numReviews,\n  rating,\n  price,\n  description,\n}: typeProps) => {\n  return (\n    <Container>\n      <h3>{name}</h3>\n      <Line />\n      <Rating text={`${numReviews} reviews`} value={rating} />\n      <Line />\n      <div style={{ color: \"#515454\" }}>Price: ${price}</div>\n      <Line />\n      <div style={{ color: \"#515454\" }}>Description: {description}</div>\n    </Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n    a {\n    width: 100px;\n    padding: 5px 0;\n    text-decoration: none;\n    color: #2a2b2b;\n    font-size: 15px;\n    font-weight: bold;\n    display: block;\n    text-align: center;\n    margin: 10px 0 20px 0;\n    text-transform: uppercase;\n    border-radius: 3px;\n    &:hover {\n      background-color: #cdd0d0\n    }\n`;\n\ntype typeProps = {\n  link: string;\n};\n\nexport const ButtonGoBack: FC<typeProps> = ({ link }: typeProps) => {\n  return (\n    <Container>\n      <Link to={`${link}`}>Go Back</Link>\n    </Container>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport { ProductBuy } from \"./productBuy/ProductBuy\";\nimport { ProductInfos } from \"./productInfo/ProductInfo\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductDetails } from \"./action\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { ButtonGoBack } from \"../../element/Button/ButtonGoback\";\n\ntype typeProps = {\n  match: any;\n  history: any;\n};\n\nconst Container = styled.div`\n  width: 100%;\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  @media (max-width: 1000px) {\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n  }\n`;\n\nconst Img = styled.img`\n  width: 500px;\n  @media (max-width: 550px) {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const ProductScreen: FC<typeProps> = ({ match, history }: typeProps) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n  const { error, loading, product } = useSelector(\n    (state: AppState) => state.product\n  );\n  const setQ = (e: number) => {\n    setQty(e);\n  };\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return (\n    <Container>\n      <ButtonGoBack link=\"/\" />\n      {loading ? (\n        <h2>Loading...</h2>\n      ) : error ? (\n        <h3>{error}</h3>\n      ) : (\n        <Wrapper>\n          <Img src={product.image} alt={product?.name} />\n          <ProductInfos\n            name={product.name}\n            numReviews={product.numReviews}\n            rating={product.rating}\n            price={product.price}\n            description={product.description}\n          />\n          <ProductBuy\n            addToCartHandler={addToCartHandler}\n            onChange={setQ}\n            price={product.price}\n            countInStock={product.countInStock}\n          />\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_RESET,\n  PRODUCT_DETAILS_SUCCESS,\n} from \"./types\";\nimport { apiFetch } from \"../../api/api\";\n\nexport const listProductDetails = (id: string) => async (\n  dispatch: Dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    dispatch({ type: PRODUCT_DETAILS_RESET });\n    const response = await new apiFetch().get(`api/product/${id}`);\n    let data;\n    if (response) {\n      data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({ type: PRODUCT_DETAILS_FAIL, payload: data.message });\n      }\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    }\n  } catch (e) {\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: e.message });\n  }\n};\n","export const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport type productListRequest = {\n  type: typeof PRODUCT_DETAILS_REQUEST;\n};\n\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport type productListSuccess = {\n  type: typeof PRODUCT_DETAILS_SUCCESS;\n  payload: any;\n};\n\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\nexport type productListFail = {\n  type: typeof PRODUCT_DETAILS_FAIL;\n  payload: string;\n};\n\nexport const PRODUCT_DETAILS_RESET = \"PRODUCT_DETAILS_RESET\";\nexport type productDetailsReset = {\n  type: typeof PRODUCT_DETAILS_RESET;\n};\n\nexport type typeActionProduct =\n  | productListRequest\n  | productListSuccess\n  | productListFail\n  | productDetailsReset;\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Selectors } from \"../../../element/Selector/Selector\";\nimport { Link } from \"react-router-dom\";\n\nconst CartItem = styled.div`\n  display: flex;\n  border-bottom: 1px solid black;\n  margin-bottom: 40px;\n  justify-content: space-around;\n  align-items: center;\n  padding-bottom: 15px;\n  flex-wrap: wrap;\n  @media (max-width: 600px) {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 10px;\n  @media (max-width: 600px) {\n    margin: 5px 0;\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nconst Img = styled.img`\n  width: 120px;\n  border-radius: 4px;\n  margin-right: 15px;\n  @media (max-width: 600px) {\n    flex-direction: column;\n    align-items: center;\n    width: 200px;\n    margin: 0;\n  }\n`;\n\nconst P = styled.p`\n  width: 130px;\n  display: flex;\n  justify-content: center;\n  @media (max-width: 600px) {\n    width: 80%;\n  }\n  a {\n    color: black;\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst I = styled.i`\n    cursor: pointer;\n    &:hover{\n        color: red;\n    }\n`;\n\ntype typeProduct = {\n  product: {\n    countInStock: number;\n    image: string;\n    name: string;\n    price: number;\n    product: string;\n    qty: number;\n  };\n  updateCart: (id: string, qrt: number) => void;\n  removeProductCart: (id: string) => void;\n};\n\nexport const CartProductItem: FC<typeProduct> = (props: typeProduct) => {\n  const Click = () => {\n    props.removeProductCart(props.product.product);\n  };\n  const Change = (e: string) => {\n    props.updateCart(props.product.product, Number(e));\n  };\n  const stock = new Array(props.product.countInStock)\n    .fill(\"\")\n    .map((el, index) => el + (index + 1));\n  return (\n    <CartItem>\n      <Img src={props.product.image} alt=\"name\" />\n      <Wrapper>\n        <P>\n          <Link to={`/product/${props.product.product}`}>\n            {props.product.name}\n          </Link>\n        </P>\n      </Wrapper>\n      <Wrapper>\n        <P>${props.product.price}</P>\n      </Wrapper>\n      <Wrapper>\n        <Selectors value={props.product.qty} onChange={Change} params={stock} />\n      </Wrapper>\n      <Wrapper>\n        <I onClick={Click} className=\"fas fa-trash\"></I>\n      </Wrapper>\n    </CartItem>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ButtonAddToCart } from \"../../../element/Button/ButtonAddToCart\";\n\nconst Containers = styled.div`\n  width: 270px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  border-bottom: 1px solid black;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype typeProps = {\n  purchases: number;\n  sum: string;\n  disabledButton: boolean;\n  onClick: () => void;\n};\n\nexport const SubtotalItems: FC<typeProps> = ({\n  purchases,\n  sum,\n  onClick,\n}: typeProps) => {\n  return (\n    <Containers>\n      <Wrapper>\n        <h3>Subtotal ({purchases}) items</h3>\n      </Wrapper>\n      <Wrapper>\n        <p>${sum}</p>\n      </Wrapper>\n      <ButtonAddToCart\n        disabled={false}\n        onClick={onClick}\n        text=\"Proceed to checkout\"\n      />\n    </Containers>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"./types\";\nimport { typeAddress } from \"./cartReducer\";\n\nexport const addToCart = (id: string, qty: number) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  const response = await fetch(`http://localhost:4000/api/product/${id}`);\n  const data = await response.json();\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n  console.log(getState().cart.cartItems);\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeItem = (payload: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload,\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data: typeAddress) => (\n  dispatch: Dispatch\n) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data: string) => (dispatch: Dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import { typeAddress, typeCartItem } from \"./cartReducer\";\n\nexport const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport type cartAddItem = {\n  type: typeof CART_ADD_ITEM;\n  payload: typeCartItem;\n};\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport type cartRemoveItem = {\n  type: typeof CART_REMOVE_ITEM;\n  payload: string;\n};\n\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport type cartSaveAddress = {\n  type: typeof CART_SAVE_SHIPPING_ADDRESS;\n  payload: typeAddress;\n};\n\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\nexport type cartSavePayment = {\n  type: typeof CART_SAVE_PAYMENT_METHOD;\n  payload: string;\n};\n\nexport type CartAction =\n  | cartAddItem\n  | cartRemoveItem\n  | cartSaveAddress\n  | cartSavePayment;\n","import React, { FC, useEffect } from \"react\";\nimport { ButtonGoBack } from \"../../element/Button/ButtonGoback\";\nimport { CartProductItem } from \"./cartProductItem/CartProductItem\";\nimport styled from \"@emotion/styled\";\nimport { SubtotalItems } from \"./subtotalItems/SubtotalItems\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToCart, removeItem } from \"./action\";\nimport { AppState } from \"../../init/rootReducer\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 30px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\ntype typeProps = {\n  match: any;\n  location: string;\n  history: any;\n};\n\nexport const CartScreen: FC<typeProps> = ({\n  match,\n  location,\n  history,\n}: typeProps) => {\n  const productId = match.params.id;\n  //@ts-ignore\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector((state: AppState) => state.cart);\n  const { cartItems } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const updateCart = (id: string, qrt: number) => {\n    dispatch(addToCart(id, qrt));\n  };\n  const purchases = cartItems.reduce((acc, item) => acc + item.qty, 0);\n  const sum = cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  const removeProductCart = (id: string) => {\n    dispatch(removeItem(id));\n  };\n  const Checkout = () => {\n    history.push(\"/shipping\");\n  };\n  return (\n    <>\n      <ButtonGoBack link=\"/\" />\n      <h3>Shopping Cart</h3>\n      <Wrapper>\n        <Container>\n          {cartItems.length === 0 ? (\n            <p>Your cart is empty</p>\n          ) : (\n            cartItems.map((el) => (\n              <CartProductItem\n                removeProductCart={removeProductCart}\n                key={el.product}\n                product={el}\n                updateCart={updateCart}\n              />\n            ))\n          )}\n        </Container>\n        <div>\n          <SubtotalItems\n            onClick={Checkout}\n            disabledButton={cartItems.length === 0}\n            purchases={purchases}\n            sum={sum}\n          />\n        </div>\n      </Wrapper>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ntype typeProps = {\n  message: string;\n  color: string;\n};\n\nexport const Message: FC<typeProps> = ({ message, color }: typeProps) => {\n  return (\n    <Container style={{ backgroundColor: `${color}` }}>{message}</Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\ntype typeProps = {\n  msg: string;\n};\n\nconst P = styled.p`\n  font-size: 14px;\n  color: #e55039;\n  margin: 7px;\n`;\n\nexport const ErrorMessages: FC<typeProps> = ({ msg }: typeProps) => (\n  <P>{msg}</P>\n);\n","import { ErrorMessage, Field } from \"formik\";\nimport { ErrorMessages } from \"../Message/ErrorMessages/ErrorMessages\";\nimport React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Label = styled.label`\n  color: #909292;\n  margin-bottom: 15px;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 115px;\n`;\n\ntype typeProps = {\n  id: string;\n  type: string;\n  placeholder: string;\n};\n\nexport const InputElement: FC<typeProps> = ({ id, type, placeholder }) => {\n  return (\n    <InputWrapper>\n      <Label htmlFor={id}>{placeholder}</Label>\n      <Field id={id} name={id} type={type} placeholder={placeholder} />\n      <ErrorMessage name={id}>\n        {(msg) => <ErrorMessages msg={msg} />}\n      </ErrorMessage>\n    </InputWrapper>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"./action\";\nimport { AppState } from \"../../../init/rootReducer\";\nimport { Message } from \"../../../element/Message/Message/Message\";\nimport { InputElement } from \"../../../element/InputElement/InputElement\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Wrapper = styled.div`\n  width: 70%;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    height: 500px;\n    justify-content: space-around;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n`;\nconst Button = styled.button`\n  width: 120px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\nconst P = styled.p`\n  color: #909292;\n  font-size: 15px;\n  a {\n    text-decoration: none;\n    color: #252525;\n  }\n`;\n\nexport type FormValues = {\n  email: string;\n  password: string;\n};\n\ntype typeProps = {\n  location: any;\n  history: any;\n};\n\nexport const Login: FC<typeProps> = ({ location, history }: typeProps) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state: AppState) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n  const onSubmit = (values: FormValues) => {\n    dispatch(login(values.email, values.password));\n  };\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const initialState: FormValues = { email: \"\", password: \"\" };\n  const inputEl = [\n    { id: \"email\", type: \"email\", placeholder: \"Email\" },\n    { id: \"password\", type: \"password\", placeholder: \"Password\" },\n  ];\n  return (\n    <Container>\n      <Wrapper>\n        <Formik\n          initialValues={initialState}\n          onSubmit={(values, actions) => {\n            onSubmit(values);\n          }}\n          validationSchema={Yup.object({\n            email: Yup.string().email().required(\"Required\"),\n            password: Yup.string()\n              .min(6, \"Must be 6 characters or less\")\n              .max(20, \"Must be 20 characters or less\")\n              .required(\"Required\"),\n          })}\n        >\n          <Form onChange={(e) => e.preventDefault()}>\n            {error && <Message color=\"#ff6a6a\" message={error} />}\n            <H3>sign in</H3>\n            {inputEl.map((el) => (\n              <InputElement\n                id={el.id}\n                type={el.type}\n                placeholder={el.placeholder}\n              />\n            ))}\n            <Button disabled={loading} type=\"submit\">\n              sign in\n            </Button>\n            <P>\n              New Customer? <Link to=\"/registration\">Register</Link>\n            </P>\n          </Form>\n        </Formik>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n} from \"./types\";\nimport { USER_RESET } from \"../../profileScreen/types\";\nimport { ORDER_RESET } from \"../../orderScreen/types\";\n\nexport const login = (email: string, password: string) => async (\n  dispatch: Dispatch\n) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    const user = {\n      email,\n      password,\n    };\n    const config = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    };\n    const response = await fetch(\n      \"http://localhost:4000/api/user/login\",\n      config\n    );\n    const data = await response.json();\n    if (response.status !== 200) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: data.message,\n      });\n    } else {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    }\n  } catch (e) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: e.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch: Dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_RESET });\n  dispatch({ type: ORDER_RESET });\n};\n","import { userInfo } from \"./loginReducer\";\n\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport type userLoginFail = {\n  type: typeof USER_LOGIN_FAIL;\n  payload: string;\n};\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport type userLoginRequest = {\n  type: typeof USER_LOGIN_REQUEST;\n};\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport type userLoginSuccess = {\n  type: typeof USER_LOGIN_SUCCESS;\n  payload: userInfo;\n};\nexport const USER_LOGOUT = \"USER_LOGOUT\";\nexport type userLogout = {\n  type: typeof USER_LOGOUT;\n};\nexport type typeActionUserLogin =\n  | userLoginFail\n  | userLoginRequest\n  | userLoginSuccess\n  | userLogout;\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Register } from \"./action\";\nimport { AppState } from \"../../../init/rootReducer\";\nimport { InputElement } from \"../../../element/InputElement/InputElement\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Wrapper = styled.div`\n  width: 70%;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    height: 700px;\n    justify-content: space-around;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n`;\nconst Button = styled.button`\n  width: 160px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\nconst P = styled.p`\n  color: #909292;\n  font-size: 15px;\n  a {\n    text-decoration: none;\n    color: #252525;\n  }\n`;\n\nexport type FormValues = {\n  name: string;\n  email: string;\n  password: string;\n  repeatPassword: string;\n};\n\ntype typeProps = {\n  location: any;\n  history: any;\n};\n\nexport const Registration: FC<typeProps> = ({\n  location,\n  history,\n}: typeProps) => {\n  const dispatch = useDispatch();\n  const onSubmit = (values: FormValues) => {\n    const newUser = {\n      email: values.email,\n      password: values.password,\n      name: values.name,\n    };\n    dispatch(Register(newUser));\n  };\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n  const newUser = useSelector((state: AppState) => state.userLogin);\n  const { loading, error, userInfo } = newUser;\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, newUser, redirect]);\n  const initialState: FormValues = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n  };\n  const inputEl = [\n    { id: \"name\", type: \"text\", placeholder: \"Name\" },\n    { id: \"email\", type: \"email\", placeholder: \"Email\" },\n    { id: \"password\", type: \"password\", placeholder: \"Password\" },\n    { id: \"repeatPassword\", type: \"password\", placeholder: \"Repeat Password\" },\n  ];\n  return (\n    <Container>\n      <Wrapper>\n        <Formik\n          initialValues={initialState}\n          onSubmit={(values, actions) => {\n            onSubmit(values);\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required(\"Required\"),\n            email: Yup.string().email().required(\"Required\"),\n            password: Yup.string()\n              .min(6, \"Must be 8 characters or less\")\n              .max(20, \"Must be 20 characters or less\")\n              .required(\"Required\"),\n            repeatPassword: Yup.string()\n              .required(\"Please repeat your password\")\n              .test(\n                \"passwords-match\",\n                \"Passwords must match ya fool\",\n                function (value) {\n                  return this.parent.password === value;\n                }\n              ),\n          })}\n        >\n          <Form onChange={(e) => e.preventDefault()}>\n            {error && <p>{error}</p>}\n            <H3>sign in</H3>\n            {inputEl.map((el) => (\n              <InputElement\n                id={el.id}\n                type={el.type}\n                placeholder={el.placeholder}\n              />\n            ))}\n            <Button disabled={loading} type=\"submit\">\n              Registration\n            </Button>\n            <P>\n              Have an account? <Link to=\"/login\">Sign in</Link>\n            </P>\n          </Form>\n        </Formik>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport { USER_LOGIN_SUCCESS } from \"../login/types\";\nimport { USER_REGISTER_FAIL } from \"./types\";\n\nexport const Register = ({\n  email,\n  password,\n  name,\n}: {\n  email: string;\n  password: string;\n  name: string;\n}) => async (dispatch: Dispatch) => {\n  try {\n    const newUser = {\n      email,\n      password,\n      name,\n    };\n    const config = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newUser),\n    };\n    const response = await fetch(\n      \"http://localhost:4000/api/user/create\",\n      config\n    );\n    const data = await response.json();\n    if (response.status !== 200) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: data.message,\n      });\n    } else {\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n    }\n  } catch (e) {}\n};\n","import { userInfo } from \"./registerReducer\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\ntype userRegisterRequest = {\n  type: typeof USER_REGISTER_REQUEST;\n};\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\ntype userRegisterSuccess = {\n  type: typeof USER_REGISTER_SUCCESS;\n  payload: userInfo;\n};\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\ntype userRegisterFail = {\n  type: typeof USER_REGISTER_FAIL;\n  payload: string;\n};\n\nexport type typeActionUserRegister =\n  | userRegisterFail\n  | userRegisterRequest\n  | userRegisterSuccess;\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport { Message } from \"../../../element/Message/Message/Message\";\nimport { InputElement } from \"../../../element/InputElement/InputElement\";\n\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n`;\nconst Button = styled.button`\n  width: 120px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\ntype typeProps = {\n  error: string;\n  loading: boolean;\n  onSubmit: (values: any) => void;\n  name: string;\n  email: string;\n};\n\nexport const FormUpdate: FC<typeProps> = React.memo(\n  ({ error, loading, onSubmit, email, name }: typeProps) => {\n    const inputEl = [\n      { id: \"email\", placeholder: \"Email\", type: \"email\" },\n      { id: \"name\", placeholder: \"Name\", type: \"text\" },\n      { id: \"password\", placeholder: \"New Password\", type: \"password\" },\n    ];\n    return (\n      <Formik\n        initialValues={{ email: email, password: \"\", name: name }}\n        onSubmit={(values) => {\n          onSubmit(values);\n        }}\n        validationSchema={Yup.object({\n          email: Yup.string().email().required(\"Required\"),\n          name: Yup.string().required(\"Required\"),\n          password: Yup.string()\n            .min(6, \"Must be 6 characters or less\")\n            .max(20, \"Must be 20 characters or less\"),\n        })}\n      >\n        <Form onChange={(e) => e.preventDefault()}>\n          <H3>update information</H3>\n          {error && <Message color=\"#ff6a6a\" message={error} />}\n          {inputEl.map((el) => (\n            <InputElement\n              key={el.id + el.type}\n              id={el.id}\n              type={el.type}\n              placeholder={el.placeholder}\n            />\n          ))}\n          <Button disabled={loading} type=\"submit\">\n            Update\n          </Button>\n        </Form>\n      </Formik>\n    );\n  }\n);\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { order } from \"../../orderScreen/orderDetailsReducer\";\nimport { Link } from \"react-router-dom\";\n\nconst WrapperTable = styled.div`\n  width: 700px;\n  @media (max-width: 767px) {\n    width: 100%;\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n`;\n\nconst Table = styled.table`\n  border-radius: 5px;\n  font-weight: normal;\n  border: none;\n  border-collapse: collapse;\n  width: 100%;\n  max-width: 100%;\n  white-space: nowrap;\n  background-color: white;\n  box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.2);\n  @media (max-width: 767px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Tbody = styled.tbody`\n  @media (max-width: 767px) {\n    display: block;\n    position: relative;\n    overflow-x: auto;\n    tr {\n      display: table-cell;\n      &:nth-of-type(odd) {\n        background: none;\n      }\n    }\n  }\n`;\n\nconst Thead = styled.thead`\n  @media (max-width: 767px) {\n    display: block;\n    float: left;\n    th {\n      text-align: center;\n    }\n  }\n`;\n\nconst Tr = styled.tr`\n  &:nth-of-type(even) {\n    background: #f8f8f8;\n  }\n  @media (max-width: 767px) {\n    &:nth-of-type(even) {\n      background: transparent;\n    }\n    td {\n      &:nth-of-type(odd) {\n        background: #f8f8f8;\n        border-right: 1px solid #e6e4e4;\n      }\n      &:nth-of-type(even) {\n        border-right: 1px solid #e6e4e4;\n      }\n    }\n  }\n`;\n\nconst Th = styled.th`\n  text-align: center;\n  padding: 8px;\n  font-size: 15px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  color: #ffffff;\n  background: #928f8f;\n  &:nth-of-type(odd) {\n    background: #2a2b2b;\n  }\n  @media (max-width: 767px) {\n    display: block;\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    width: 120px;\n    font-size: 13px;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 8px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  font-size: 13px;\n  border-right: 1px solid #e6e4e4;\n  @media (max-width: 767px) {\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    font-size: 13px;\n    text-overflow: ellipsis;\n    display: block;\n    text-align: center;\n  }\n`;\n\ntype typeProps = {\n  order: order[];\n};\n\nexport const MyOrder: FC<typeProps> = ({ order }: typeProps) => {\n  return (\n    <WrapperTable>\n      <H3>MY ORDERS</H3>\n      <div>\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>ID</Th>\n              <Th>DATE</Th>\n              <Th>TOTAL</Th>\n              <Th>PAID</Th>\n              <Th>DELIVERED</Th>\n              <Th></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {order.map((el) => (\n              <Tr key={el._id}>\n                <Td>{el._id}</Td>\n                <Td>{el.createdAt.substring(0, 10)}</Td>\n                <Td>${el.totalPrice}</Td>\n                <Td></Td>\n                <Td>\n                  {el.isDelivered ? (\n                    <i style={{ color: \"green\" }} className=\"fas fa-check\"></i>\n                  ) : (\n                    <i style={{ color: \"red\" }} className=\"fas fa-times\"></i>\n                  )}\n                </Td>\n                <Td>\n                  <Link to={`/order/${el._id}`}>\n                    <button>Details</button>\n                  </Link>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </div>\n    </WrapperTable>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { getUserInfo, updateUser } from \"./action\";\nimport { FormUpdate } from \"./formUpdate/FormUpdate\";\nimport { MyOrder } from \"./myOrders/MyOrders\";\nimport { getOrderAll } from \"../orderScreen/action\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  form {\n    display: flex;\n    flex-direction: column;\n    height: 500px;\n    justify-content: space-around;\n    min-width: 300px;\n    margin-right: 30px;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n  }\n`;\n\nexport type FormValues = {\n  email: string;\n  password: string;\n  name: string;\n};\n\ntype typeProps = {\n  history: any;\n};\n\nexport const ProfileScreen: FC<typeProps> = ({ history }: typeProps) => {\n  const dispatch = useDispatch();\n  const userDetails = useSelector((state: AppState) => state.userUpdate);\n  const { loading, error, user } = userDetails;\n  const userLogin = useSelector((state: AppState) => state.userLogin);\n  const { userInfo } = userLogin;\n  const orders = useSelector((state: AppState) => state.orderDetails);\n  const { allOrder } = orders;\n  const [name, setName] = useState(userDetails.user.name);\n  const [email, setEmail] = useState(userDetails.user.email);\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserInfo(\"profile\"));\n        dispatch(getOrderAll());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, userInfo, history, user]);\n\n  const onSubmit = (values: FormValues) => {\n    dispatch(updateUser(values));\n  };\n  return (\n    <Container>\n      <Wrapper>\n        {name ? (\n          <>\n            <FormUpdate\n              error={error}\n              loading={loading}\n              onSubmit={onSubmit}\n              name={name}\n              email={email}\n            />\n            <MyOrder order={allOrder} />\n          </>\n        ) : (\n          <p>...Loader</p>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n} from \"./types\";\nimport { USER_LOGIN_SUCCESS } from \"../authScreen/login/types\";\nimport { apiFetch } from \"../../api/api\";\n\nexport const getUserInfo = (id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const response = await new apiFetch(userInfo.token).get(\"api/user/profile\");\n    let data;\n    if (response) {\n      data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: USER_UPDATE_FAIL,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: data,\n      });\n    }\n  } catch (e) {}\n};\n\ntype upType = {\n  email?: string;\n  password?: string;\n  name?: string;\n};\n\nexport const updateUser = (up: upType) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const response = await new apiFetch(userInfo.token, up).put(\n      \"api/user/updateUser\"\n    );\n    let data;\n    if (response) {\n      data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: USER_UPDATE_FAIL,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: USER_UPDATE_SUCCESS,\n        payload: data,\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    }\n  } catch (e) {}\n};\n","import { user } from \"./profileUpdateReducer\";\n\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\ntype userUpdateFail = {\n  type: typeof USER_UPDATE_FAIL;\n  payload: string;\n};\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\ntype userUpdateRequest = {\n  type: typeof USER_UPDATE_REQUEST;\n};\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\ntype userUpdateSuccess = {\n  type: typeof USER_UPDATE_SUCCESS;\n  payload: user;\n};\nexport const USER_RESET = \"USER_RESET\";\ntype userReset = {\n  type: typeof USER_RESET;\n};\n\nexport type typeActionUserUpdate =\n  | userUpdateFail\n  | userUpdateRequest\n  | userUpdateSuccess\n  | userReset;\n","import { Dispatch } from \"redux\";\nimport {\n  GET_ORDER_ALL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_RESET,\n} from \"./types\";\n\nexport const getOrderById = (id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${userInfo.token}`,\n      },\n    };\n    const response = await fetch(\n      `http://localhost:4000/api/order/${id}`,\n      config\n    );\n    const data = await response.json();\n    if (response.status !== 200 && 201) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: data.message,\n      });\n    }\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (e) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: e.message,\n    });\n  }\n};\n\nexport const getOrderAll = () => async (dispatch: Dispatch, getState: any) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${userInfo.token}`,\n      },\n    };\n    const response = await fetch(`http://localhost:4000/api/order`, config);\n    const data = await response.json();\n    if (response.status !== 200 && 201) {\n      dispatch({\n        type: ORDER_DETAILS_FAIL,\n        payload: data.message,\n      });\n    }\n    dispatch({\n      type: GET_ORDER_ALL,\n      payload: data,\n    });\n  } catch (e) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: e.message,\n    });\n  }\n};\n","export const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport type orderDetailsRequest = {\n  type: typeof ORDER_DETAILS_REQUEST;\n};\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\nexport type orderDetailsFail = {\n  type: typeof ORDER_DETAILS_FAIL;\n  payload: string;\n};\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport type orderDetailsSuccess = {\n  type: typeof ORDER_DETAILS_SUCCESS;\n  payload: any;\n};\nexport const GET_ORDER_ALL = \"GET_ORDER_ALL\";\ntype getOrderAll = {\n  type: typeof GET_ORDER_ALL;\n  payload: any;\n};\nexport const ORDER_RESET = \"ORDER_RESET\";\ntype orderReset = {\n  type: typeof ORDER_RESET;\n};\n\nexport type orderDetailsAction =\n  | orderDetailsFail\n  | orderDetailsRequest\n  | orderDetailsSuccess\n  | getOrderAll\n  | orderReset;\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { logout } from \"../authScreen/login/action\";\n\nconst Nav = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n  flex-wrap: wrap;\n  a {\n    text-decoration: none;\n    color: white;\n    min-width: 50px;\n    display: flex;\n    justify-content: center;\n    margin: 0 10px;\n    &:hover {\n      color: #909292;\n    }\n    i {\n      margin 0 4px;  \n    }\n  }\n`;\n\nconst Dropdown = styled.div`\n  &:hover {\n    div {\n      display: block;\n    }\n  }\n`;\nconst Dropbtn = styled.div`\n  color: white;\n  min-width: 50px;\n  display: flex;\n  justify-content: center;\n  margin: 0 10px;\n  background-color: none;\n  cursor: pointer;\n  font-size: 17px;\n  padding: 5px 0;\n  &:hover {\n      color: #909292;\n    }\n  i {\n      width:10px;\n      margin 0 4px;  \n    }\n`;\n\nconst DropdownContent = styled.div`\n  display: none;\n  position: absolute;\n  background-color: #f9f9f9;\n  min-width: 100px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n  a {\n    margin: 10px 0;\n    color: black;\n    &:hover {\n      color: #909292;\n    }\n  }\n`;\nconst Logout = styled.div`\n  color: black;\n  text-align: center;\n  cursor: pointer;\n  &:hover {\n    color: #909292;\n  }\n`;\n\nexport const Menu: FC = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state: AppState) => state.userLogin);\n  const { userInfo } = userLogin;\n  const clickLogout = () => {\n    dispatch(logout());\n  };\n  let name;\n  if (userInfo) {\n    // @ts-ignore\n    name = userInfo.name;\n  }\n  return (\n    <Nav>\n      <Link to=\"/cart\">\n        <i className=\"fas fa-shopping-cart\"></i>Cart\n      </Link>\n      {!userInfo ? (\n        <>\n          <Link to=\"/login\">\n            <i className=\"fas fa-user\"></i>Sign In\n          </Link>\n        </>\n      ) : (\n        <Dropdown>\n          <Dropbtn>\n            {name}\n            <i className=\"fas fa-caret-down\"></i>\n          </Dropbtn>\n          <DropdownContent>\n            <Link to=\"/profile\">Profile</Link>\n            {\n              //@ts-ignore\n              userInfo.isAdmin ? (\n                <>\n                  <Link to=\"/adminAllUsers\">Users</Link>\n                  <Link to=\"/adminAllProducts\">Products</Link>\n                  <Link to=\"/adminAllOrder\">Order</Link>\n                </>\n              ) : null\n            }\n            <Link to=\"/login\">\n              <Logout onClick={clickLogout}>Logout</Logout>\n            </Link>\n          </DropdownContent>\n        </Dropdown>\n      )}\n    </Nav>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Menu } from \"./Menu\";\nimport { Link } from \"react-router-dom\";\n\nconst StyleHeader = styled.header`\n  height: 10vh;\n  background-color: #2a2b2b;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  width: 100%;\n`;\n\nconst NavbarBrand = styled.div`\n  width: 100px;\n  a {\n    text-decoration: none;\n    color: white;\n  }\n`;\n\nconst Navbar = styled.div`\n  width: 70%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  @media (max-width: 720px) {\n    width: 100%;\n    padding: 0 20px;\n  }\n`;\n\nexport const Header: FC = () => {\n  return (\n    <StyleHeader>\n      <Navbar>\n        <NavbarBrand>\n          <Link to=\"/\">PROSHOP</Link>\n        </NavbarBrand>\n        <Menu />\n      </Navbar>\n    </StyleHeader>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  a {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nconst P = styled.p`\n  font-weight: bold;\n`;\n\ntype typeProps = {\n  step1?: boolean;\n  step2?: boolean;\n  step3?: boolean;\n  step4?: boolean;\n};\n\nexport const CheckoutSteps: FC<typeProps> = ({\n  step1,\n  step2,\n  step3,\n  step4,\n}: typeProps) => {\n  return (\n    <Container>\n      {step1 ? (\n        <Link to=\"/login\">\n          <P>Sign In</P>\n        </Link>\n      ) : (\n        <P style={{ opacity: \"0.5\" }}>Sign In</P>\n      )}\n      {step2 ? (\n        <Link to=\"/shipping\">\n          <P>Shipping</P>\n        </Link>\n      ) : (\n        <P style={{ opacity: \"0.5\" }}>Shipping</P>\n      )}\n      {step3 ? (\n        <Link to=\"/payment\">\n          <P>Payment</P>\n        </Link>\n      ) : (\n        <P style={{ opacity: \"0.5\" }}>Payment</P>\n      )}\n      {step4 ? (\n        <Link to=\"/placeorder\">\n          <P>Place Order</P>\n        </Link>\n      ) : (\n        <P style={{ opacity: \"0.5\" }}>Place Order</P>\n      )}\n    </Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport * as Yup from \"yup\";\nimport { Form, Formik } from \"formik\";\nimport { CheckoutSteps } from \"../../../element/CheckoutSteps/CheckoutSteps\";\nimport { InputElement } from \"../../../element/InputElement/InputElement\";\n\nconst Wrapper = styled.div`\n  width: 50%;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    height: 70vh\n    justify-content: space-around;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n  text-align: center;\n`;\nconst Button = styled.button`\n  width: 120px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\nconst styleForm = {\n  width: \"100%\",\n};\n\ntype typeProps = {\n  onSubmit: (values: any) => void;\n  address: string;\n  city: string;\n  postalCode: string;\n  country: string;\n};\n\nexport const ShippingForm: FC<typeProps> = React.memo(\n  ({ onSubmit, address, city, country, postalCode }: typeProps) => {\n    const initialState = {\n      address: address || \"\",\n      city: city || \"\",\n      postalCode: country || \"\",\n      country: postalCode || \"\",\n    };\n    const inputEl = [\n      { id: \"address\", placeholder: \"Address\", type: \"text\" },\n      { id: \"city\", placeholder: \"City\", type: \"text\" },\n      { id: \"postalCode\", placeholder: \"Postal Code\", type: \"text\" },\n      { id: \"country\", placeholder: \"Country\", type: \"text\" },\n    ];\n    return (\n      <Wrapper>\n        <CheckoutSteps step1 step2 />\n        <Formik\n          initialValues={initialState}\n          onSubmit={(values) => {\n            onSubmit(values);\n          }}\n          validationSchema={Yup.object({\n            address: Yup.string().required(\"Required\"),\n            city: Yup.string().required(\"Required\"),\n            postalCode: Yup.string().required(\"Required\"),\n            country: Yup.string().required(\"Required\"),\n          })}\n        >\n          <Form style={styleForm} onChange={(e) => e.preventDefault()}>\n            <H3>shipping</H3>\n            {inputEl.map((el) => (\n              <InputElement\n                key={el.id + el.type}\n                id={el.id}\n                type={el.type}\n                placeholder={el.placeholder}\n              />\n            ))}\n            <Button type=\"submit\">continue</Button>\n          </Form>\n        </Formik>\n      </Wrapper>\n    );\n  }\n);\n","import React, { FC, useState } from \"react\";\nimport { ShippingForm } from \"./shippingForm/ShippingForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { saveShippingAddress } from \"../cartScreen/action\";\nimport { typeAddress } from \"../cartScreen/cartReducer\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\ntype typeProps = {\n  history: any;\n};\n\nexport const ShippingScreen: FC<typeProps> = ({ history }: typeProps) => {\n  const cart = useSelector((state: AppState) => state.cart);\n  const { shippingAddress } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.country);\n  const [country, setCountry] = useState(shippingAddress.postalCode);\n  const dispatch = useDispatch();\n  const onSubmit = (values: typeAddress) => {\n    dispatch(saveShippingAddress(values));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <Container>\n      <ShippingForm\n        address={address}\n        city={city}\n        country={country}\n        postalCode={postalCode}\n        onSubmit={onSubmit}\n      />\n    </Container>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { CheckoutSteps } from \"../../element/CheckoutSteps/CheckoutSteps\";\nimport styled from \"@emotion/styled\";\nimport { Field, Form, Formik } from \"formik\";\nimport { savePaymentMethod } from \"../cartScreen/action\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 50%;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    height: 70vh\n    justify-content: space-around;\n    input {\n      background-color: #e2e6e6;\n    }\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n  text-align: center;\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100px;\n  input {\n    margin: 10px 10px 10px 0;\n  }\n`;\n\nconst Label = styled.label`\n  color: black;\n`;\n\nconst Button = styled.button`\n  width: 120px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 20px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\ntype typeProps = {\n  history: any;\n};\n\nexport const PaymentScreen: FC<typeProps> = ({ history }: typeProps) => {\n  const cart = useSelector((state: AppState) => state.cart);\n  const { shippingAddress, paymentMethod } = cart;\n  const [payment, sevPayment] = useState(paymentMethod);\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n  const dispatch = useDispatch();\n  const onSubmit = (values: { payment: string }) => {\n    dispatch(savePaymentMethod(values.payment));\n    history.push(\"/placeorder\");\n  };\n  return (\n    <Container>\n      <Wrapper>\n        <CheckoutSteps step1 step2 step3 />\n        <Formik\n          onSubmit={(values) => {\n            onSubmit(values);\n          }}\n          initialValues={{ payment: payment || \"PayPall\" }}\n        >\n          <Form style={{ width: \"100%\" }}>\n            <H3>payment method</H3>\n            <InputWrapper>\n              <Label htmlFor=\"PayPall\">\n                <Field\n                  id=\"PayPall\"\n                  name=\"payment\"\n                  type=\"radio\"\n                  value=\"PayPall\"\n                />\n                PayPall\n              </Label>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"order\">\n                <Field id=\"order\" name=\"payment\" type=\"radio\" value=\"Order\" />\n                Order\n              </Label>\n            </InputWrapper>\n            <Button type=\"submit\">continue</Button>\n          </Form>\n        </Formik>\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Span = styled.span`\n  width: 90px;\n  display: block;\n`;\n\ntype typeProps = {\n  name: string;\n  results: string;\n};\n\nexport const InfoBlock: FC<typeProps> = ({ name, results }: typeProps) => {\n  return (\n    <Container>\n      <Span>\n        <p>{name}</p>\n      </Span>\n      <Span>\n        <p>${results}</p>\n      </Span>\n    </Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ButtonAddToCart } from \"../../../element/Button/ButtonAddToCart\";\nimport { InfoBlock } from \"./InfoBlock/InfoBlock\";\n\nconst Container = styled.div`\n  border: 1px solid black;\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  border-bottom: 1px solid black;\n  display: flex;\n  justify-content: center;\n`;\n\ntype typeProps = {\n  itemsSum: string;\n  tax: string;\n  shipping: string;\n  total: string;\n  addOrder: () => void;\n};\n\nexport const OrderSummary: FC<typeProps> = ({\n  itemsSum,\n  shipping,\n  tax,\n  total,\n  addOrder,\n}: typeProps) => {\n  return (\n    <Container>\n      <Wrapper>\n        <h3>order Summary</h3>\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Items\" results={itemsSum} />\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Shipping\" results={shipping} />\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Tax\" results={tax} />\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Total\" results={total} />\n      </Wrapper>\n      <div>\n        <ButtonAddToCart\n          disabled={false}\n          onClick={addOrder}\n          text=\"Place Order\"\n        />\n      </div>\n    </Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  min-height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  border-bottom: 1px solid black;\n  flex-wrap: wrap;\n  img {\n    width: 100px;\n    border-radius: 5px;\n  }\n  a {\n    color: black;\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\ntype typeProps = {\n  qty: number;\n  price: number;\n  name: string;\n  img: string;\n};\n\nexport const OrderItem: FC<typeProps> = ({\n  qty,\n  price,\n  name,\n  img,\n}: typeProps) => {\n  const sum = qty * price;\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={img} alt=\"name\" />{\" \"}\n      </Link>\n      <Link to=\"/\">\n        <p>{name}</p>\n      </Link>\n      <p>\n        {qty} x ${price} = ${sum.toFixed(2)}\n      </p>\n    </Container>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { OrderSummary } from \"../paymentScreen/orderSummary/OrderSummary\";\nimport { CheckoutSteps } from \"../../element/CheckoutSteps/CheckoutSteps\";\nimport { OrderItem } from \"./orderItem/OrderItems\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { addNewOrder } from \"./action\";\nimport { Message } from \"../../element/Message/Message/Message\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst WrapperCheckout = styled.div`\n  width: 50%;\n  margin-bottom: 20px;\n`;\n\nconst ContainerInformation = styled.div`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid black;\n`;\n\nconst OrderItems = styled.div`\n  max-width: 700px;\n`;\n\ntype typeProps = {\n  history: any;\n};\n\nexport const PlaceOrderScreen: FC<typeProps> = ({ history }: typeProps) => {\n  const dispatch = useDispatch();\n  const cart = useSelector((state: AppState) => state.cart);\n  const { cartItems, shippingAddress, paymentMethod } = cart;\n  const { address, country, city, postalCode } = shippingAddress;\n  const itemsSum = cartItems\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\n    .toFixed(2);\n  const Tax = 20;\n  const Shipping = 0;\n  const Total = Number(itemsSum) + Tax + Shipping;\n  const orderCreate = useSelector((state: AppState) => state.order);\n  const { error, order } = orderCreate;\n  useEffect(() => {\n    if (order._id) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, order]);\n  const addOrder = () => {\n    dispatch(\n      addNewOrder({\n        orderItems: cartItems,\n        shippingAddress,\n        paymentMethod,\n        itemsPrice: itemsSum,\n        shippingPrice: Shipping,\n        taxPrice: Tax,\n        totalPrice: Total,\n      })\n    );\n  };\n  return (\n    <Container>\n      <WrapperCheckout>\n        <CheckoutSteps step1 step2 step3 step4 />\n      </WrapperCheckout>\n      <Wrapper>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            minWidth: \"700px\",\n          }}\n        >\n          <ContainerInformation>\n            <h3>SHIPPING</h3>\n            <p>\n              Address: {address}, {city}, {postalCode}, {country}\n            </p>\n          </ContainerInformation>\n          <ContainerInformation>\n            <h3>PAYMENT PAY</h3>\n            <p>{paymentMethod}</p>\n          </ContainerInformation>\n          <OrderItems>\n            <h3>ORDER ITEMS</h3>\n            {cartItems.map((el) => (\n              <OrderItem\n                key={el.price + el.name}\n                img={el.image}\n                name={el.name}\n                qty={el.qty}\n                price={el.price}\n              />\n            ))}\n          </OrderItems>\n        </div>\n        <div>\n          <OrderSummary\n            addOrder={addOrder}\n            itemsSum={itemsSum}\n            tax={String(Tax)}\n            shipping={String(Shipping)}\n            total={String(Total)}\n          />\n          {error && <Message message={error} color=\"#ff6a6a\" />}\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n} from \"./types\";\n\nexport const addNewOrder = (order: any) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const config = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${userInfo.token}`,\n      },\n      body: JSON.stringify(order),\n    };\n    const response = await fetch(`http://localhost:4000/api/order`, config);\n    const data = await response.json();\n    if (response.status !== 200 && 201) {\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload: data.message,\n      });\n    }\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (e) {}\n};\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport type orderCreateRequest = {\n  type: typeof ORDER_CREATE_REQUEST;\n};\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport type orderCreateSuccess = {\n  type: typeof ORDER_CREATE_SUCCESS;\n  payload: any;\n};\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\nexport type orderCreateFail = {\n  type: typeof ORDER_CREATE_FAIL;\n  payload: string;\n};\n\nexport type orderActionType =\n  | orderCreateSuccess\n  | orderCreateFail\n  | orderCreateRequest;\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst Span = styled.span`\n  width: 90px;\n  display: block;\n`;\n\ntype typeProps = {\n  name: string;\n  results: string;\n};\n\nexport const InfoBlock: FC<typeProps> = ({ name, results }: typeProps) => {\n  return (\n    <Container>\n      <Span>\n        <p>{name}</p>\n      </Span>\n      <Span>\n        <p>${results}</p>\n      </Span>\n    </Container>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { InfoBlock } from \"./InfoBlock/InfoBlock\";\n\nconst Container = styled.div`\n  border: 1px solid black;\n  width: 250px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  border-bottom: 1px solid black;\n  display: flex;\n  justify-content: center;\n`;\n\ntype typeProps = {\n  itemsSum: string;\n  tax: string;\n  shipping: string;\n  total: string;\n};\n\nexport const OrderSumm: FC<typeProps> = ({\n  itemsSum,\n  shipping,\n  tax,\n  total,\n}: typeProps) => {\n  return (\n    <Container>\n      <Wrapper>\n        <h3>order Summary</h3>\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Items\" results={itemsSum} />\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Shipping\" results={shipping} />\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Tax\" results={tax} />\n      </Wrapper>\n      <Wrapper>\n        <InfoBlock name=\"Total\" results={total} />\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport { OrderItem } from \"../placeOrderScreen/orderItem/OrderItems\";\nimport { Message } from \"../../element/Message/Message/Message\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../init/rootReducer\";\nimport { typeCartItem } from \"../cartScreen/cartReducer\";\nimport { OrderSumm } from \"./OrderSummary/OrderSumm\";\nimport { getOrderById } from \"./action\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst ContainerInformation = styled.div`\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid black;\n`;\n\nconst OrderItems = styled.div`\n  max-width: 700px;\n`;\n\ntype typeProps = {\n  history: any;\n  match: any;\n};\n\nexport const OrderScreen: FC<typeProps> = ({ history, match }: typeProps) => {\n  const orderDetails = useSelector((state: AppState) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n  const user = useSelector((state: AppState) => state.userLogin);\n  const { userInfo } = user;\n  const { name, email } = userInfo;\n  const {\n    taxPrice,\n    shippingPrice,\n    totalPrice,\n    orderItems,\n    shippingAddress,\n    paymentMethod,\n  } = order;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!match.params.id) {\n      history.push(\"/cart\");\n    } else {\n      if (!order._id) {\n        dispatch(getOrderById(match.params.id));\n      }\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Wrapper>\n        {loading ? (\n          <p>Loading..</p>\n        ) : error ? (\n          <Message message={error} color=\"#ff6a6a\" />\n        ) : (\n          <>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                minWidth: \"700px\",\n              }}\n            >\n              <h2>ORDER: {match.params.id}</h2>\n              <ContainerInformation>\n                <h3>SHIPPING</h3>\n                <p>Name: {name}</p>\n                <p>Email: {email}</p>\n                <p>\n                  Address: {shippingAddress.address}, {shippingAddress.city},\n                  {shippingAddress.postalCode}, {shippingAddress.country}\n                </p>\n                {!order.isDelivered ? (\n                  <Message message=\"Not Delivered\" color=\"#ff6a6a\" />\n                ) : null}\n              </ContainerInformation>\n              <ContainerInformation>\n                <h3>PAYMENT PAY</h3>\n                <p>{paymentMethod}</p>\n                {!order.isPaid ? (\n                  <Message message=\"Not Paid\" color=\"#ff6a6a\" />\n                ) : null}\n              </ContainerInformation>\n              <OrderItems>\n                <h3>ORDER ITEMS</h3>\n                {orderItems.map((el: typeCartItem) => (\n                  <OrderItem\n                    key={el.price + el.name}\n                    img={el.image}\n                    name={el.name}\n                    qty={el.qty}\n                    price={el.price}\n                  />\n                ))}\n              </OrderItems>\n            </div>\n            <div>\n              <OrderSumm\n                itemsSum={String(totalPrice - taxPrice - shippingPrice)}\n                tax={String(taxPrice)}\n                shipping={String(shippingPrice)}\n                total={String(totalPrice)}\n              />\n            </div>\n          </>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { FC, memo, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Message } from \"../../../../element/Message/Message/Message\";\nimport { ErrorMessages } from \"../../../../element/Message/ErrorMessages/ErrorMessages\";\n\nconst Modal = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ModelContext = styled.div`\n  width: 700px;\n  padding: 20px;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst FormUpdate = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: space-around;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n    textarea {\n      height: 70px;\n      background-color: #e2e6e6;\n      border: none;\n      padding-left: 10px;\n      font-family: \"sans-serif\", \"Arial\" ;\n      resize: none;\n    }\n`;\n\nconst Label = styled.label`\n  color: #909292;\n  margin-bottom: 15px;\n`;\n\nconst I = styled.i`\n  color: red;\n  font-size: 25px;\n  cursor: pointer;\n  padding: 3px;\n  &:hover {\n    color: #f74949;\n  }\n`;\n\nconst Button = styled.button`\n  width: 120px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 115px;\n`;\n\nconst Success = styled.div`\n  background-color: green;\n  text-align: center;\n  padding: 7px 0;\n  font-size: 18px;\n`;\n\ntype typeProps = {\n  onClick: () => void;\n  productInfo: any;\n  updateProduct: (value: any, id: string) => void;\n  successDetails: boolean;\n};\n\nexport const ModalProduct: FC<typeProps> = memo(\n  ({ onClick, productInfo, updateProduct, successDetails }: typeProps) => {\n    const [name] = useState(productInfo.name);\n    const [price] = useState(productInfo.price);\n    const [image] = useState(productInfo.image);\n    const [brand] = useState(productInfo.brand);\n    const [countInStock] = useState(productInfo.countInStock);\n    const [category] = useState(productInfo.category);\n    const [description] = useState(productInfo.description);\n    const [success, setSuccess] = useState(false);\n    console.log(successDetails)\n    useEffect(() => {\n      if (successDetails) {\n        setSuccess(true);\n        setTimeout(() => {\n          setSuccess(false);\n        }, 1000);\n      }\n    }, [successDetails]);\n    const initialState = {\n      name: name,\n      price: price,\n      image: image,\n      brand: brand,\n      countInStock: countInStock,\n      category: category,\n      description: description,\n    };\n    return (\n      <Modal>\n        <ModelContext>\n          {productInfo.loading ? (\n            <p>...Loading</p>\n          ) : productInfo.error ? (\n            <p>{productInfo.error}</p>\n          ) : (\n            <>\n              <Header>\n                <I\n                  onClick={onClick}\n                  className=\"fas fa-times\"\n                  style={{ fontSize: \"25px\", color: \"red\" }}\n                ></I>\n              </Header>\n              <FormUpdate>\n                <Formik\n                  initialValues={initialState}\n                  onSubmit={(values) => {\n                    updateProduct(values, productInfo._id);\n                  }}\n                  validationSchema={Yup.object({\n                    name: Yup.string().required(\"Required\"),\n                    price: Yup.number().required(\"Required\"),\n                    image: Yup.string().required(\"Required\"),\n                    brand: Yup.string().required(\"Required\"),\n                    countInStock: Yup.number().required(\"Required\"),\n                    category: Yup.string().required(\"Required\"),\n                    description: Yup.string().required(\"Required\"),\n                  })}\n                >\n                  <Form onChange={(e) => e.preventDefault()}>\n                    <h3>update information</h3>\n                    {false && <Message color=\"#ff6a6a\" message={\"\"} />}\n                    <InputWrapper>\n                      <Label htmlFor=\"name\">Name</Label>\n                      <Field\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        placeholder=\"Name\"\n                      />\n                      <ErrorMessage name=\"name\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <Label htmlFor=\"price\">Price</Label>\n                      <Field\n                        id=\"price\"\n                        name=\"price\"\n                        type=\"number\"\n                        placeholder=\"Price\"\n                      />\n                      <ErrorMessage name=\"price\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <Label htmlFor=\"image\">Image</Label>\n                      <Field\n                        id=\"image\"\n                        name=\"image\"\n                        type=\"text\"\n                        placeholder=\"image\"\n                      />\n                      <ErrorMessage name=\"image\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <Label htmlFor=\"image\">Brand</Label>\n                      <Field\n                        id=\"brand\"\n                        name=\"brand\"\n                        type=\"text\"\n                        placeholder=\"brand\"\n                      />\n                      <ErrorMessage name=\"brand\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <Label htmlFor=\"countInStock\">Count In Stock</Label>\n                      <Field\n                        id=\"countInStock\"\n                        name=\"countInStock\"\n                        type=\"number\"\n                        placeholder=\"Count In Stock\"\n                      />\n                      <ErrorMessage name=\"countInStock\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <Label htmlFor=\"category\">Category</Label>\n                      <Field\n                        id=\"category\"\n                        name=\"category\"\n                        type=\"text\"\n                        placeholder=\"category\"\n                      />\n                      <ErrorMessage name=\"category\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <InputWrapper>\n                      <Label htmlFor=\"description\">Description</Label>\n                      <Field\n                        as=\"textarea\"\n                        id=\"description\"\n                        name=\"description\"\n                        type=\"text\"\n                        placeholder=\"description\"\n                      />\n                      <ErrorMessage name=\"description\">\n                        {(msg) => <ErrorMessages msg={msg} />}\n                      </ErrorMessage>\n                    </InputWrapper>\n                    <Button disabled={false} type=\"submit\">\n                      Update\n                    </Button>\n                    {success ? <Success>Success</Success> : null}\n                  </Form>\n                </Formik>\n              </FormUpdate>\n            </>\n          )}\n        </ModelContext>\n      </Modal>\n    );\n  }\n);\n","import React, { FC } from \"react\";\nimport { Message } from \"../../../../element/Message/Message/Message\";\nimport styled from \"@emotion/styled\";\n\nconst Table = styled.table`\n  border-radius: 5px;\n  font-weight: normal;\n  border: none;\n  border-collapse: collapse;\n  width: 100%;\n  max-width: 100%;\n  white-space: nowrap;\n  background-color: white;\n  box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.2);\n  @media (max-width: 767px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Tbody = styled.tbody`\n  @media (max-width: 767px) {\n    display: block;\n    position: relative;\n    overflow-x: auto;\n    tr {\n      display: table-cell;\n      &:nth-of-type(odd) {\n        background: none;\n      }\n    }\n  }\n`;\n\nconst Thead = styled.thead`\n  @media (max-width: 767px) {\n    display: block;\n    float: left;\n    th {\n      text-align: center;\n    }\n  }\n`;\n\nconst Tr = styled.tr`\n  &:nth-of-type(even) {\n    background: #f8f8f8;\n  }\n  @media (max-width: 767px) {\n    &:nth-of-type(even) {\n      background: transparent;\n    }\n    td {\n      &:nth-of-type(odd) {\n        background: #f8f8f8;\n        border-right: 1px solid #e6e4e4;\n      }\n      &:nth-of-type(even) {\n        border-right: 1px solid #e6e4e4;\n      }\n    }\n  }\n`;\n\nconst Th = styled.th`\n  text-align: center;\n  padding: 8px;\n  font-size: 15px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  color: #ffffff;\n  background: #928f8f;\n  &:nth-of-type(odd) {\n    background: #2a2b2b;\n  }\n  @media (max-width: 767px) {\n    display: block;\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    width: 120px;\n    font-size: 13px;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 8px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  font-size: 13px;\n  border-right: 1px solid #e6e4e4;\n  @media (max-width: 767px) {\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    font-size: 13px;\n    text-overflow: ellipsis;\n    display: block;\n    text-align: center;\n  }\n`;\n\nconst ButtonCreate = styled.button`\n  padding: 10px;\n  margin: 5px 0;\n  cursor: pointer;\n  border: none;\n  background-color: black;\n  color: white;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  margin: 5px;\n  cursor: pointer;\n  border: none;\n`;\n\ntype typeProps = {\n  loading: boolean;\n  error: string;\n  products: any[];\n  editMode: (id: string) => void;\n  productCreate: () => void;\n  removeProduct: (id: string) => void;\n};\n\nexport const ProductsDashboard: FC<typeProps> = ({\n  loading,\n  error,\n  products,\n  editMode,\n  productCreate,\n  removeProduct,\n}: typeProps) => {\n  return (\n    <>\n      <h3>Products</h3>\n      <ButtonCreate onClick={productCreate}>\n        <i className=\"fas fa-plus\"></i> Create product\n      </ButtonCreate>\n      {loading ? (\n        <p>...Loading</p>\n      ) : error ? (\n        <Message message={error} color=\"#ff6a6a\" />\n      ) : (\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>ID</Th>\n              <Th>NAME</Th>\n              <Th>PRICE</Th>\n              <Th>CATEGORY</Th>\n              <Th>BRAND</Th>\n              <Th></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {products.map((el) => (\n              <Tr key={el._id}>\n                <Td>{el._id}</Td>\n                <Td>{el.name}</Td>\n                <Td>${el.price}</Td>\n                <Td>{el.category}</Td>\n                <Td>{el.brand}</Td>\n                <Td>\n                  <Button onClick={() => editMode(el._id)}>\n                    <i style={{ color: \"green\" }} className=\"fa fa-edit\"></i>\n                  </Button>\n                  <Button onClick={() => removeProduct(el._id)}>\n                    <i style={{ color: \"red\" }} className=\"fas fa-trash\"></i>\n                  </Button>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n","export const deepEqual = (obj1: any, obj2: any) => {\n  return JSON.stringify(obj1) === JSON.stringify(obj2);\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../init/rootReducer\";\nimport { ModalProduct } from \"./Modal/ModalProduct\";\nimport { ProductsDashboard } from \"./productDashboard/ProductsDashboard\";\nimport {\n  getAllProduct,\n  deleteProduct,\n  getOneProduct,\n  updateProduct,\n} from \"./action\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Wrapper = styled.div`\n  width: 70%;\n  @media (max-width: 1200px) {\n    width: 85%;\n  }\n`;\n\ntype typeProps = {\n  history: any;\n};\n\nexport const AdminAllProducts: FC<typeProps> = ({ history }: typeProps) => {\n  const userLogin = useSelector((state: AppState) => state.userLogin);\n  const Products = useSelector((state: AppState) => state.adminProduct);\n  const {\n    allProduct,\n    loadingAll,\n    oneProduct,\n    successDetails,\n  } = Products;\n  const [activeModal, setActive] = useState(false);\n  const { userInfo } = userLogin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //@ts-ignore\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getAllProduct());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history]);\n  const closeModal = () => {\n    setActive(false);\n  };\n  const editMode = (id: string) => {\n    setActive(true);\n    dispatch(getOneProduct(id));\n  };\n  const createProduct = () => {\n    history.push(\"/createProduct\");\n  };\n  const removeProduct = (id: string) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n  const editProduct = (value: any, id: string) => {\n    dispatch(updateProduct(value, id));\n  };\n  return (\n    <Container>\n      {!activeModal ? null : oneProduct.name ? (\n        <ModalProduct\n          successDetails={successDetails}\n          productInfo={oneProduct}\n          updateProduct={editProduct}\n          onClick={closeModal}\n        />\n      ) : null}\n      <Wrapper>\n        <ProductsDashboard\n          removeProduct={removeProduct}\n          productCreate={createProduct}\n          loading={loadingAll}\n          error={\"\"}\n          products={allProduct}\n          editMode={editMode}\n        />\n      </Wrapper>\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  ADD_PRODUCT_ADMIN,\n  EDIT_PRODUCT_ADMIN,\n  FAIL_PRODUCT_ADMIN,\n  FETCH_PRODUCT_ADMIN,\n  ONE_PRODUCT_ADMIN,\n  REMOVE_PRODUCT_ADMIN,\n  REQUEST_ALL_PRODUCT_ADMIN,\n  RESET_ONE_PRODUCT_ADMIN,\n  REQUEST_ONE_PRODUCT_ADMIN,\n  REQUEST_ADD_PRODUCT_ADMIN,\n  REQUEST_EDIT_PRODUCT_ADMIN,\n  RESET_LOADING_PRODUCT_ADMIN,\n} from \"./types\";\nimport { apiFetch } from \"../../../api/api\";\nimport { deepEqual } from \"../../../utils/deepEqual\";\n\nexport const getAllProduct = () => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: REQUEST_ALL_PRODUCT_ADMIN,\n    });\n    const {\n      adminProduct: { allProduct },\n    } = getState();\n    const response = await new apiFetch().get(\"api/product\");\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_PRODUCT_ADMIN,\n          payload: data.message,\n        });\n      }\n      for (let i = 0; i <= data.length; i++) {\n        if (!deepEqual(allProduct[i], data[i])) {\n          dispatch({\n            type: FETCH_PRODUCT_ADMIN,\n            payload: data,\n          });\n          break;\n        }\n      }\n      dispatch({\n        type: RESET_LOADING_PRODUCT_ADMIN,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_PRODUCT_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const getOneProduct = (id: string) => async (dispatch: Dispatch) => {\n  try {\n    dispatch({\n      type: RESET_ONE_PRODUCT_ADMIN,\n    });\n    dispatch({\n      type: REQUEST_ONE_PRODUCT_ADMIN,\n    });\n    const response = await new apiFetch().get(`api/product/${id}`);\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_PRODUCT_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: ONE_PRODUCT_ADMIN,\n        payload: data,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_PRODUCT_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const response = await new apiFetch(userInfo.token, { id }).delete(\n      \"api/product/remove\"\n    );\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_PRODUCT_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: REMOVE_PRODUCT_ADMIN,\n        payload: id,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_PRODUCT_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const addProduct = (product: any) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: REQUEST_ADD_PRODUCT_ADMIN,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const response = await new apiFetch(userInfo.token, product).post(\n      \"api/product/create\"\n    );\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_PRODUCT_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: ADD_PRODUCT_ADMIN,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_PRODUCT_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const updateProduct = (update: any, id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: REQUEST_EDIT_PRODUCT_ADMIN,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const updateProduct = {\n      ...update,\n      id,\n    };\n    const response = await new apiFetch(userInfo.token, updateProduct).put(\n      \"api/product/update\"\n    );\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_PRODUCT_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: EDIT_PRODUCT_ADMIN,\n        payload: updateProduct,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_PRODUCT_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n","export const FETCH_PRODUCT_ADMIN = \"FETCH_PRODUCT_ADMIN\";\nexport type fetchProductAdmin = {\n  type: typeof FETCH_PRODUCT_ADMIN;\n  payload: any[];\n};\n\nexport const ONE_PRODUCT_ADMIN = \"ONE_PRODUCT_ADMIN\";\nexport type oneProductAdmin = {\n  type: typeof ONE_PRODUCT_ADMIN;\n  payload: any;\n};\n\nexport const RESET_LOADING_PRODUCT_ADMIN = \"RESET_LOADING_PRODUCT_ADMIN\";\nexport type resetLoadingProductAdmin = {\n  type: typeof RESET_LOADING_PRODUCT_ADMIN;\n};\nexport const RESET_ONE_PRODUCT_ADMIN = \"RESET_ONE_PRODUCT_ADMIN\";\nexport type resetOneProductAdmin = {\n  type: typeof RESET_ONE_PRODUCT_ADMIN;\n  payload: any;\n};\n\nexport const ADD_PRODUCT_ADMIN = \"ADD_PRODUCT_ADMIN\";\nexport type addProductAdmin = {\n  type: typeof ADD_PRODUCT_ADMIN;\n};\n\nexport const REMOVE_PRODUCT_ADMIN = \"REMOVE_PRODUCT_ADMIN\";\nexport type removeProductAdmin = {\n  type: typeof REMOVE_PRODUCT_ADMIN;\n  payload: string;\n};\n\nexport const EDIT_PRODUCT_ADMIN = \"EDIT_PRODUCT_ADMIN\";\nexport type editProductAdmin = {\n  type: typeof EDIT_PRODUCT_ADMIN;\n  payload: any;\n};\n\nexport const REQUEST_ALL_PRODUCT_ADMIN = \"REQUEST_ALL_PRODUCT_ADMIN\";\nexport type requestAllProductAdmin = {\n  type: typeof REQUEST_ALL_PRODUCT_ADMIN;\n};\n\nexport const REQUEST_ONE_PRODUCT_ADMIN = \"REQUEST_ONE_PRODUCT_ADMIN\";\nexport type requestOneProductAdmin = {\n  type: typeof REQUEST_ONE_PRODUCT_ADMIN;\n};\n\nexport const REQUEST_REMOVE_PRODUCT_ADMIN = \"REQUEST_REMOVE_PRODUCT_ADMIN\";\nexport type requestRemoveProductAdmin = {\n  type: typeof REQUEST_REMOVE_PRODUCT_ADMIN;\n};\n\nexport const REQUEST_EDIT_PRODUCT_ADMIN = \"REQUEST_EDIT_PRODUCT_ADMIN\";\nexport type requestEditProductAdmin = {\n  type: typeof REQUEST_EDIT_PRODUCT_ADMIN;\n};\n\nexport const REQUEST_ADD_PRODUCT_ADMIN = \"REQUEST_ADD_PRODUCT_ADMIN\";\nexport type requestAddProductAdmin = {\n  type: typeof REQUEST_ADD_PRODUCT_ADMIN;\n};\n\nexport const FAIL_PRODUCT_ADMIN = \"FAIL_PRODUCT_ADMIN\";\nexport type failProductAdmin = {\n  type: typeof FAIL_PRODUCT_ADMIN;\n  payload: string;\n};\n\nexport type AdminActionProductType =\n  | fetchProductAdmin\n  | addProductAdmin\n  | removeProductAdmin\n  | resetLoadingProductAdmin\n  | editProductAdmin\n  | requestAllProductAdmin\n  | requestOneProductAdmin\n  | requestRemoveProductAdmin\n  | requestAddProductAdmin\n  | requestEditProductAdmin\n  | failProductAdmin\n  | oneProductAdmin\n  | resetOneProductAdmin;\n","import React, { FC, useEffect, useState } from \"react\";\nimport { ButtonGoBack } from \"../../../../element/Button/ButtonGoback\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ErrorMessages } from \"../../../../element/Message/ErrorMessages/ErrorMessages\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../../init/rootReducer\";\nimport { addProduct } from \"../action\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    justify-content: space-around;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n    textarea {\n      padding-left: 10px;\n      border: none;\n      height: 80px;\n      background-color: #e2e6e6;\n      resize: none;\n      font-family: \"sans-serif\", \"Arial\";\n      margin-bottom: 15px;\n    }\n  }\n`;\n\nconst InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 115px;\n`;\nconst H3 = styled.h3`\n  font-size: 30px;\n  text-transform: uppercase;\n  color: #585858;\n`;\nconst Button = styled.button`\n  width: 160px;\n  background-color: black;\n  color: white;\n  border: none;\n  padding: 15px 30px;\n  margin: 8px 0 8px 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  &:disabled {\n    cursor: default;\n    opacity: 0.3;\n  }\n  &:hover {\n    color: #909292;\n  }\n`;\nconst Label = styled.label`\n  color: #909292;\n  margin-bottom: 15px;\n`;\n\nconst Success = styled.div`\n  background-color: green;\n  text-align: center;\n  padding: 7px 0;\n  font-size: 18px;\n`;\n\nexport const CreateProduct: FC = () => {\n  const dispatch = useDispatch();\n  const product = useSelector((state: AppState) => state.adminProduct);\n  const { error, success: productSuccess } = product;\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    if (productSuccess) {\n      setSuccess(true);\n      setTimeout(() => {\n        setSuccess(false);\n      }, 2000);\n    }\n  }, [productSuccess]);\n  const onSubmit = (value: any) => {\n    dispatch(addProduct(value));\n  };\n\n  const uploadFileHandler = async (e: any) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    try {\n      const config = {\n        method: \"POST\",\n        body: formData,\n      };\n      await fetch(\"http://localhost:4000/api/upload\", config);\n    } catch (e) {}\n  };\n\n  const initialState = {\n    name: \"\",\n    image: \"\",\n    description: \"\",\n    brand: \"\",\n    category: \"\",\n    price: 0,\n    countInStock: 0,\n    numReviews: 0,\n  };\n  return (\n    <Container>\n      <ButtonGoBack link=\"/adminAllProducts\" />\n      <Wrapper>\n        <Formik\n          initialValues={initialState}\n          onSubmit={(values) => {\n            onSubmit(values);\n          }}\n          validationSchema={Yup.object({\n            name: Yup.string().required(\"Required\"),\n            image: Yup.string().required(\"Required\"),\n            description: Yup.string().required(\"Required\"),\n            brand: Yup.string().required(\"Required\"),\n            category: Yup.string().required(\"Required\"),\n            price: Yup.number().required(\"Required\"),\n            countInStock: Yup.number().required(\"Required\"),\n            numReviews: Yup.number().required(\"Required\"),\n          })}\n        >\n          <Form onChange={(e) => e.preventDefault()}>\n            {error && <p>{error}</p>}\n            <H3>create new product</H3>\n            <InputWrapper>\n              <Label htmlFor=\"name\">Name</Label>\n              <Field id=\"name\" name=\"name\" type=\"name\" placeholder=\"Name\" />\n              <ErrorMessage name=\"name\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"image\">image</Label>\n              <Field\n                onChange={uploadFileHandler}\n                id=\"image\"\n                name=\"image\"\n                type=\"file\"\n                placeholder=\"image\"\n                multiple\n              />\n              <ErrorMessage name=\"image\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"description\">Description</Label>\n              <Field\n                as=\"textarea\"\n                id=\"description\"\n                name=\"description\"\n                type=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrorMessage name=\"description\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"brand\">Brand</Label>\n              <Field id=\"brand\" name=\"brand\" type=\"text\" placeholder=\"Brand\" />\n              <ErrorMessage name=\"brand\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"category\">Category</Label>\n              <Field\n                id=\"category\"\n                name=\"category\"\n                type=\"text\"\n                placeholder=\"Category\"\n              />\n              <ErrorMessage name=\"category\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"price\">Price</Label>\n              <Field\n                id=\"price\"\n                name=\"price\"\n                type=\"number\"\n                placeholder=\"Price\"\n              />\n              <ErrorMessage name=\"price\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"countInStock\">Count In Stock</Label>\n              <Field\n                id=\"countInStock\"\n                name=\"countInStock\"\n                type=\"number\"\n                placeholder=\"Count In Stock\"\n              />\n              <ErrorMessage name=\"countInStock\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <InputWrapper>\n              <Label htmlFor=\"numReviews\">Num Reviews</Label>\n              <Field\n                id=\"numReviews\"\n                name=\"numReviews\"\n                type=\"number\"\n                placeholder=\"Num Reviews\"\n              />\n              <ErrorMessage name=\"numReviews\">\n                {(msg) => <ErrorMessages msg={msg} />}\n              </ErrorMessage>\n            </InputWrapper>\n            <Button disabled={false} type=\"submit\">\n              Create\n            </Button>\n            {success ? <Success>Success</Success> : null}\n          </Form>\n        </Formik>\n      </Wrapper>\n    </Container>\n  );\n};\n","import React, { FC, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { FormUpdate } from \"../../../profileScreen/formUpdate/FormUpdate\";\nimport { Message } from \"../../../../element/Message/Message/Message\";\n\nconst Modal = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: fixed;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ModelContext = styled.div`\n  width: 400px;\n  min-height: 500px;\n  padding: 20px;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n`;\n\ntype typeProps = {\n  onClick: () => void;\n  error: string;\n  loading: boolean;\n  onSubmit: (values: any) => void;\n  name: string;\n  email: string;\n  successUpdate: boolean;\n};\n\nconst I = styled.i`\n  color: red;\n  font-size: 25px;\n  cursor: pointer;\n  padding: 3px;\n  &:hover {\n    color: #f74949;\n  }\n`;\n\nexport const ModalProfile: FC<typeProps> = ({\n  successUpdate,\n  onClick,\n  error,\n  loading,\n  onSubmit,\n  name,\n  email,\n}: typeProps) => {\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    if (successUpdate) {\n      setSuccess(true);\n      setTimeout(() => {\n        setSuccess(false);\n      }, 1000);\n    }\n  }, [successUpdate]);\n  return (\n    <Modal>\n      <ModelContext>\n        {loading ? (\n          <p>...Loading</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <>\n            <Header>\n              <I\n                onClick={onClick}\n                className=\"fas fa-times\"\n                style={{ fontSize: \"25px\", color: \"red\" }}\n              ></I>\n            </Header>\n            <div>\n              {name ? (\n                <>\n                  <FormUpdate\n                    error={error}\n                    loading={loading}\n                    onSubmit={onSubmit}\n                    name={name}\n                    email={email}\n                  />\n                  {success ? (\n                    <Message message=\"Success\" color=\"#06c742\" />\n                  ) : null}\n                </>\n              ) : (\n                <p>...Loading</p>\n              )}\n            </div>\n          </>\n        )}\n      </ModelContext>\n    </Modal>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Message } from \"../../../../element/Message/Message/Message\";\nimport styled from \"@emotion/styled\";\n\nconst Table = styled.table`\n  border-radius: 5px;\n  font-weight: normal;\n  border: none;\n  border-collapse: collapse;\n  width: 100%;\n  max-width: 100%;\n  white-space: nowrap;\n  background-color: white;\n  box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.2);\n  @media (max-width: 767px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Tbody = styled.tbody`\n  @media (max-width: 767px) {\n    display: block;\n    position: relative;\n    overflow-x: auto;\n    tr {\n      display: table-cell;\n      &:nth-of-type(odd) {\n        background: none;\n      }\n    }\n  }\n`;\n\nconst Thead = styled.thead`\n  @media (max-width: 767px) {\n    display: block;\n    float: left;\n    th {\n      text-align: center;\n    }\n  }\n`;\n\nconst Tr = styled.tr`\n  &:nth-of-type(even) {\n    background: #f8f8f8;\n  }\n  @media (max-width: 767px) {\n    &:nth-of-type(even) {\n      background: transparent;\n    }\n    td {\n      &:nth-of-type(odd) {\n        background: #f8f8f8;\n        border-right: 1px solid #e6e4e4;\n      }\n      &:nth-of-type(even) {\n        border-right: 1px solid #e6e4e4;\n      }\n    }\n  }\n`;\n\nconst Th = styled.th`\n  text-align: center;\n  padding: 8px;\n  font-size: 15px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  color: #ffffff;\n  background: #928f8f;\n  &:nth-of-type(odd) {\n    background: #2a2b2b;\n  }\n  @media (max-width: 767px) {\n    display: block;\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    width: 120px;\n    font-size: 13px;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 8px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  font-size: 13px;\n  border-right: 1px solid #e6e4e4;\n  @media (max-width: 767px) {\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    font-size: 13px;\n    text-overflow: ellipsis;\n    display: block;\n    text-align: center;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 5px;\n  margin: 5px;\n  cursor: pointer;\n`;\n\ntype typeProps = {\n  loading: boolean;\n  error: string;\n  users: any[];\n  editMode: (id: string) => void;\n  removeUser: (id: string) => void;\n};\n\nexport const UserDashboard: FC<typeProps> = ({\n  loading,\n  error,\n  users,\n  editMode,\n  removeUser,\n}: typeProps) => {\n  return (\n    <>\n      <h3>Users</h3>\n      {loading ? (\n        <p>...Loading</p>\n      ) : error ? (\n        <Message message={error} color=\"#ff6a6a\" />\n      ) : (\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>ID</Th>\n              <Th>NAME</Th>\n              <Th>EMAIL</Th>\n              <Th>ADMIN</Th>\n              <Th></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {users.map((el) => (\n              <Tr key={el._id}>\n                <Td>{el._id}</Td>\n                <Td>{el.name}</Td>\n                <Td>{el.email}</Td>\n                <Td>\n                  {el.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </Td>\n                <Td>\n                  <Button onClick={() => editMode(el._id)}>\n                    <i style={{ color: \"green\" }} className=\"fa fa-edit\"></i>\n                  </Button>\n                  <Button onClick={() => removeUser(el._id)}>\n                    <i style={{ color: \"red\" }} className=\"fas fa-trash\"></i>\n                  </Button>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n","import React, { FC, memo, useEffect, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../init/rootReducer\";\nimport { ModalProfile } from \"./Modal/ModalProfile\";\nimport { UserDashboard } from \"./userDashboard/userDashboard\";\nimport { deleteUser, getAllUsers, getUserByEdit, updateUser } from \"./action\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  form {\n    display: flex;\n    flex-direction: column;\n    height: 500px;\n    justify-content: space-around;\n    min-width: 300px;\n    margin-right: 30px;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n  }\n`;\nconst Wrapper = styled.div`\n  width: 70%;\n  form {\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    height: 500px;\n    justify-content: space-around;\n    input {\n      padding-left: 10px;\n      border: none;\n      height: 50px;\n      background-color: #e2e6e6;\n    }\n  }\n`;\n\ntype typeProps = {\n  history: any;\n};\n\nexport const UsersAdmin: FC<typeProps> = memo(({ history }: typeProps) => {\n  const usersList = useSelector((state: AppState) => state.adminUser);\n  const {\n    allUsers,\n    error,\n    loadingUsers,\n    user,\n    loadingDetails,\n    successUpdate,\n  } = usersList;\n  const userLogin = useSelector((state: AppState) => state.userLogin);\n  const [activeModal, setActive] = useState(false);\n  const { userInfo } = userLogin;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //@ts-ignore\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getAllUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history]);\n  const closeModal = () => {\n    setActive(false);\n  };\n  const editMode = (id: string) => {\n    setActive(true);\n    dispatch(getUserByEdit(id));\n  };\n  const setUpdate = (values: {\n    email: string;\n    name: string;\n    password: string;\n  }) => {\n    dispatch(updateUser(values, user._id));\n  };\n  const removeUser = (id: string) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n  return (\n    <Container>\n      {activeModal ? (\n        <ModalProfile\n          successUpdate={successUpdate}\n          loading={loadingDetails}\n          error={error}\n          onSubmit={setUpdate}\n          name={user.name}\n          email={user.email}\n          onClick={closeModal}\n        />\n      ) : null}\n      <Wrapper>\n        <UserDashboard\n          removeUser={removeUser}\n          loading={loadingUsers}\n          error={error}\n          users={allUsers}\n          editMode={editMode}\n        />\n      </Wrapper>\n    </Container>\n  );\n});\n","import { Dispatch } from \"redux\";\nimport {\n  FAIL_USERS_ADMIN,\n  FETCH_USERS_ADMIN,\n  REQUEST_EDIT_USERS_ADMIN,\n  REQUEST_USERS_ADMIN,\n  FETCH_USER_ADMIN,\n  RESET_USER_ADMIN,\n  REQUEST_DETAILS_USERS_ADMIN,\n  EDIT_USER_ADMIN,\n  REQUEST_REMOVE_USERS_ADMIN,\n  REMOVE_USER_ADMIN,\n  RESET_LOADING_USERS_ADMIN,\n} from \"./types\";\nimport { apiFetch } from \"../../../api/api\";\nimport { deepEqual } from \"../../../utils/deepEqual\";\n\nexport const getAllUsers = () => async (dispatch: Dispatch, getState: any) => {\n  try {\n    dispatch({\n      type: REQUEST_USERS_ADMIN,\n    });\n    const {\n      userLogin: { userInfo },\n      adminUser: { allUsers },\n    } = getState();\n    const response = await new apiFetch(userInfo.token).get(\"api/user/users\");\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_USERS_ADMIN,\n          payload: data.message,\n        });\n      }\n      for (let i = 0; i <= data.length; i++) {\n        if (!deepEqual(allUsers[i], data[i])) {\n          dispatch({\n            type: FETCH_USERS_ADMIN,\n            payload: data,\n          });\n          break;\n        }\n      }\n      dispatch({\n        type: RESET_LOADING_USERS_ADMIN,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_USERS_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const getUserByEdit = (id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: RESET_USER_ADMIN,\n    });\n    dispatch({\n      type: REQUEST_DETAILS_USERS_ADMIN,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const response = await new apiFetch(userInfo.token).get(`api/user/${id}`);\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_USERS_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: FETCH_USER_ADMIN,\n        payload: data,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_USERS_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const updateUser = (\n  values: { email: string; name: string; password: string },\n  id: string\n) => async (dispatch: Dispatch, getState: any) => {\n  try {\n    dispatch({\n      type: REQUEST_EDIT_USERS_ADMIN,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const updateUser = {\n      ...values,\n      id,\n    };\n    const response = await new apiFetch(userInfo.token, updateUser).put(\n      `api/user/updateUser/${id}`\n    );\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_USERS_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: EDIT_USER_ADMIN,\n        payload: updateUser,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_USERS_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\nexport const deleteUser = (id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: REQUEST_REMOVE_USERS_ADMIN,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const response = await new apiFetch(userInfo.token, { id }).delete(\n      \"api/user/remove\"\n    );\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_USERS_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: REMOVE_USER_ADMIN,\n        payload: id,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_USERS_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n\n/*\nexport const deleteUser = (id: string) => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: ADMIN_REMOVE_USER_REQUEST,\n    });\n    dispatch({\n      type: ADMIN_RESET_USER,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    const configGet = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Basic ${userInfo.token}`,\n      },\n      body: JSON.stringify({ id }),\n    };\n    const response = await fetch(\n      `http://localhost:4000/api/user/remove`,\n      configGet\n    );\n    const data = await response.json();\n    if (response.status !== 200 && 201) {\n      dispatch({\n        type: ADMIN_REMOVE_USER_FAIL,\n        payload: data.message,\n      });\n    }\n    dispatch({\n      type: ADMIN_REMOVE_USER_SUCCESS,\n    });\n  } catch (e) {\n    dispatch({\n      type: ADMIN_REMOVE_USER_FAIL,\n      payload: e.message,\n    });\n  }\n};*/\n","import { user } from \"../../profileScreen/profileUpdateReducer\";\n\nexport const FETCH_USERS_ADMIN = \"FETCH_USERS_ADMIN\";\nexport type fetchUsersAdmin = {\n  type: typeof FETCH_USERS_ADMIN;\n  payload: user[];\n};\nexport const RESET_LOADING_USERS_ADMIN = \"RESET_LOADING_USERS_ADMIN\";\nexport type resetLoadingUsersAdmin = {\n  type: typeof RESET_LOADING_USERS_ADMIN;\n};\nexport const RESET_USER_ADMIN = \"RESET_USER_ADMIN\";\nexport type resetUserAdmin = {\n  type: typeof RESET_USER_ADMIN;\n};\nexport const FETCH_USER_ADMIN = \"FETCH_USER_ADMIN\";\nexport type fetchUserAdmin = {\n  type: typeof FETCH_USER_ADMIN;\n  payload: any;\n};\nexport const EDIT_USER_ADMIN = \"EDIT_USER_ADMIN\";\nexport type editUserAdmin = {\n  type: typeof EDIT_USER_ADMIN;\n  payload: any;\n};\nexport const REMOVE_USER_ADMIN = \"REMOVE_USER_ADMIN\";\nexport type removeUserAdmin = {\n  type: typeof REMOVE_USER_ADMIN;\n  payload: string;\n};\nexport const REQUEST_USERS_ADMIN = \"REQUEST_USERS_ADMIN\";\nexport type requestUsersAdmin = {\n  type: typeof REQUEST_USERS_ADMIN;\n};\nexport const REQUEST_REMOVE_USERS_ADMIN = \"REQUEST_REMOVE_USERS_ADMIN\";\nexport type requestRemoveUsersAdmin = {\n  type: typeof REQUEST_REMOVE_USERS_ADMIN;\n};\nexport const REQUEST_DETAILS_USERS_ADMIN = \"REQUEST_DETAILS_USERS_ADMIN\";\nexport type requestDetailsUsersAdmin = {\n  type: typeof REQUEST_DETAILS_USERS_ADMIN;\n};\nexport const REQUEST_EDIT_USERS_ADMIN = \"REQUEST_EDIT_USERS_ADMIN\";\nexport type requestEditUsersAdmin = {\n  type: typeof REQUEST_EDIT_USERS_ADMIN;\n};\nexport const FAIL_USERS_ADMIN = \"FAIL_USERS_ADMIN\";\nexport type failUsersAdmin = {\n  type: typeof FAIL_USERS_ADMIN;\n  payload: string;\n};\nexport const RESET_USERS_ADMIN = \"RESET_USERS_ADMIN\";\nexport type resetUsersAdmin = {\n  type: typeof RESET_USERS_ADMIN;\n};\n\nexport type AdminActionType =\n  | fetchUsersAdmin\n  | fetchUserAdmin\n  | editUserAdmin\n  | resetUserAdmin\n  | resetLoadingUsersAdmin\n  | removeUserAdmin\n  | requestUsersAdmin\n  | requestRemoveUsersAdmin\n  | requestDetailsUsersAdmin\n  | requestEditUsersAdmin\n  | resetUsersAdmin\n  | failUsersAdmin;\n","import React, { FC } from \"react\";\nimport { Message } from \"../../../../element/Message/Message/Message\";\nimport styled from \"@emotion/styled\";\n\nconst Table = styled.table`\n  border-radius: 5px;\n  font-weight: normal;\n  border: none;\n  border-collapse: collapse;\n  width: 100%;\n  max-width: 100%;\n  white-space: nowrap;\n  background-color: white;\n  box-shadow: 0px 15px 20px rgba(0, 0, 0, 0.2);\n  @media (max-width: 767px) {\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst Tbody = styled.tbody`\n  @media (max-width: 767px) {\n    display: block;\n    position: relative;\n    overflow-x: auto;\n    tr {\n      display: table-cell;\n      &:nth-of-type(odd) {\n        background: none;\n      }\n    }\n  }\n`;\n\nconst Thead = styled.thead`\n  @media (max-width: 767px) {\n    display: block;\n    float: left;\n    th {\n      text-align: center;\n    }\n  }\n`;\n\nconst Tr = styled.tr`\n  &:nth-of-type(even) {\n    background: #f8f8f8;\n  }\n  @media (max-width: 767px) {\n    &:nth-of-type(even) {\n      background: transparent;\n    }\n    td {\n      &:nth-of-type(odd) {\n        background: #f8f8f8;\n        border-right: 1px solid #e6e4e4;\n      }\n      &:nth-of-type(even) {\n        border-right: 1px solid #e6e4e4;\n      }\n    }\n  }\n`;\n\nconst Th = styled.th`\n  text-align: center;\n  padding: 8px;\n  font-size: 15px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  color: #ffffff;\n  background: #928f8f;\n  &:nth-of-type(odd) {\n    background: #2a2b2b;\n  }\n  @media (max-width: 767px) {\n    display: block;\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    width: 120px;\n    font-size: 13px;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 8px;\n  border: none;\n  font-family: Verdana, sans-serif;\n  font-size: 13px;\n  border-right: 1px solid #e6e4e4;\n  @media (max-width: 767px) {\n    padding: 10px 2px;\n    box-sizing: border-box;\n    overflow-x: hidden;\n    overflow-y: auto;\n    font-size: 13px;\n    text-overflow: ellipsis;\n    display: block;\n    text-align: center;\n  }\n`;\n\nconst ButtonCreate = styled.button`\n  padding: 10px;\n  margin: 5px 0;\n  cursor: pointer;\n  border: none;\n  background-color: black;\n  color: white;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  margin: 5px;\n  cursor: pointer;\n  border: none;\n`;\n\ntype typeProps = {\n  allOrder: any[];\n  loadingOrders: boolean;\n  error: string;\n};\n\nexport const OlderDashboard: FC<typeProps> = ({\n  allOrder,\n  loadingOrders,\n  error,\n}: typeProps) => {\n  console.log(allOrder);\n  return (\n    <>\n      <h3>Order</h3>\n      {loadingOrders ? (\n        <p>...Loading</p>\n      ) : error ? (\n        <Message message={error} color=\"#ff6a6a\" />\n      ) : (\n        <Table>\n          <Thead>\n            <Tr>\n              <Th>ID</Th>\n              <Th>USER</Th>\n              <Th>DATE</Th>\n              <Th>TOTAL</Th>\n              <Th>PAID</Th>\n              <Th>DELIVERED</Th>\n              <Th></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {allOrder.map((el) => (\n              <Tr key={el._id}>\n                <Td>{el._id}</Td>\n                <Td>{el.name}</Td>\n                <Td>{el.createdAt.substring(0, 10)}</Td>\n                <Td>${el.totalPrice}</Td>\n                <Td>\n                  {el.isPaid ? (\n                    <i style={{ color: \"green\" }} className=\"fas fa-check\"></i>\n                  ) : (\n                    <i style={{ color: \"red\" }} className=\"fas fa-times\"></i>\n                  )}\n                </Td>\n                <Td>\n                  {el.isDelivered ? (\n                    <i style={{ color: \"green\" }} className=\"fas fa-check\"></i>\n                  ) : (\n                    <i style={{ color: \"red\" }} className=\"fas fa-times\"></i>\n                  )}\n                </Td>\n                <Td>\n                  <Button onClick={() => console.log(\"edit\")}>\n                    <i style={{ color: \"green\" }} className=\"fas fa-info\"></i>\n                  </Button>\n                  <Button onClick={() => console.log(\"remove\")}>\n                    <i style={{ color: \"red\" }} className=\"fas fa-trash\"></i>\n                  </Button>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { OlderDashboard } from \"./orderDashboard/orderDashboard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"../../../init/rootReducer\";\nimport { getAllOrderAdmin } from \"./action\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n  width: 70%;\n  @media (max-width: 1200px) {\n    width: 85%;\n  }\n`;\n\ntype typeProps = {\n  history: any;\n};\n\nexport const AdminAllOrder: FC<typeProps> = ({ history }: typeProps) => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state: AppState) => state.userLogin);\n  const Order = useSelector((state: AppState) => state.adminOrder);\n  const { allOrder, loadingOrders, error } = Order;\n  const { userInfo } = userLogin;\n  useEffect(() => {\n    //@ts-ignore\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getAllOrderAdmin());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history]);\n  return (\n    <Container>\n      <Wrapper>\n        <OlderDashboard\n          allOrder={allOrder}\n          loadingOrders={loadingOrders}\n          error={error}\n        />\n      </Wrapper>\n    </Container>\n  );\n};\n","import { Dispatch } from \"redux\";\nimport {\n  FAIL_ORDER_ADMIN,\n  FETCH_ORDER_ADMIN,\n  REQUEST_ALL_ORDER_ADMIN,\n  RESET_LOADING_ORDER_ADMIN,\n} from \"./types\";\nimport { apiFetch } from \"../../../api/api\";\nimport { deepEqual } from \"../../../utils/deepEqual\";\n\nexport const getAllOrderAdmin = () => async (\n  dispatch: Dispatch,\n  getState: any\n) => {\n  try {\n    dispatch({\n      type: REQUEST_ALL_ORDER_ADMIN,\n    });\n    const {\n      adminOrder: { allOrder },\n      userLogin: { userInfo },\n    } = getState();\n    const response = await new apiFetch(userInfo.token).get(\"api/order/all\");\n    if (response) {\n      const data = await response.json();\n      if (response.status !== 200 && 201) {\n        dispatch({\n          type: FAIL_ORDER_ADMIN,\n          payload: data.message,\n        });\n      }\n      dispatch({\n        type: FETCH_ORDER_ADMIN,\n        payload: data,\n      });\n    }\n  } catch (e) {\n    dispatch({\n      type: FAIL_ORDER_ADMIN,\n      payload: e.message,\n    });\n  }\n};\n","export const FETCH_ORDER_ADMIN = \"FETCH_ORDER_ADMIN\";\nexport type fetchOrderAdmin = {\n  type: typeof FETCH_ORDER_ADMIN;\n  payload: any[];\n};\n\nexport const ONE_ORDER_ADMIN = \"ONE_ORDER_ADMIN\";\nexport type oneOrderAdmin = {\n  type: typeof ONE_ORDER_ADMIN;\n  payload: any;\n};\n\nexport const REMOVE_ORDER_ADMIN = \"REMOVE_ORDER_ADMIN\";\nexport type removeOrderAdmin = {\n  type: typeof REMOVE_ORDER_ADMIN;\n  payload: string;\n};\n\nexport const REQUEST_ALL_ORDER_ADMIN = \"REQUEST_ALL_ORDER_ADMIN\";\nexport type requestAllOrderAdmin = {\n  type: typeof REQUEST_ALL_ORDER_ADMIN;\n};\n\nexport const REQUEST_ONE_ORDER_ADMIN = \"REQUEST_ONE_ORDER_ADMIN\";\nexport type requestOneOrderAdmin = {\n  type: typeof REQUEST_ONE_ORDER_ADMIN;\n};\n\nexport const FAIL_ORDER_ADMIN = \"FAIL_ORDER_ADMIN\";\nexport type failOrderAdmin = {\n  type: typeof FAIL_ORDER_ADMIN;\n  payload: string;\n};\n\nexport const RESET_LOADING_ORDER_ADMIN = \"RESET_LOADING_ORDER_ADMIN\";\nexport type resetLoadingOrderAdmin = {\n  type: typeof RESET_LOADING_ORDER_ADMIN;\n};\n\nexport type AdminActionOrderType =\n  | fetchOrderAdmin\n  | oneOrderAdmin\n  | removeOrderAdmin\n  | requestAllOrderAdmin\n  | requestOneOrderAdmin\n  | failOrderAdmin\n  | resetLoadingOrderAdmin;\n","//Core\nimport React, { FC } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\n//Components\nimport { Footer } from \"../Footer/Footer\";\nimport { HomeScreen } from \"../../bus/homeScreen/HomeScreen\";\nimport { ProductScreen } from \"../../bus/productScreen/ProductScreen\";\nimport { CartScreen } from \"../../bus/cartScreen/cartScreen\";\nimport { Login } from \"../../bus/authScreen/login/Login\";\nimport { Registration } from \"../../bus/authScreen/registration/Registration\";\nimport { ProfileScreen } from \"../../bus/profileScreen/ProfileScreen\";\nimport { Header } from \"../../bus/header/Header\";\nimport { ShippingScreen } from \"../../bus/shippingScreen/ShippingScreen\";\nimport { PaymentScreen } from \"../../bus/paymentScreen/PaymentScreen\";\nimport { PlaceOrderScreen } from \"../../bus/placeOrderScreen/PlaceOrderScreen\";\nimport { OrderScreen } from \"../../bus/orderScreen/OrderScreen\";\nimport { AdminAllProducts } from \"../../bus/adminScreen/products/Produtcts\";\nimport { CreateProduct } from \"../../bus/adminScreen/products/createProduct/CreateProduct\";\nimport { UsersAdmin } from \"../../bus/adminScreen/allUsers/Users\";\nimport { AdminAllOrder } from \"../../bus/adminScreen/allOrder/Order\";\n\nconst Container = styled.div`\n  min-height: 80vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 8px;\n  @media (max-width: 1200px) {\n    padding: 0 20px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  width: 70%;\n  @media (max-width: 1550px) {\n    width: 85%;\n  }\n  @media (max-width: 1270px) {\n    width: 100%;\n  }\n`;\n\nexport const App: FC = () => {\n  return (\n    <>\n      <Header />\n      <Container>\n        <Wrapper>\n          <Switch>\n            <Route exact path=\"/\" component={HomeScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/registration\" component={Registration} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/adminAllUsers\" component={UsersAdmin} />\n            <Route path=\"/adminAllProducts\" component={AdminAllProducts} />\n            <Route path=\"/createProduct\" component={CreateProduct} />\n            <Route path=\"/adminAllOrder\" component={AdminAllOrder} />\n          </Switch>\n        </Wrapper>\n      </Container>\n      <Footer>Copyright &copy; ProShop</Footer>\n    </>\n  );\n};\n","import {\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  typeActionProducts,\n} from \"./types\";\n\nconst initialState = {\n  products: [],\n  loading: false,\n  error: \"\",\n  success: false,\n};\n\nexport type typeProduct = {\n  _id: string;\n  name: string;\n  image: string;\n  description: string;\n  brand?: string;\n  category?: string;\n  price: number;\n  countInStock: number;\n  rating: number;\n  numReviews: number;\n};\n\ntype typeState = {\n  products: typeProduct[];\n  loading: boolean;\n  error: string;\n  success: boolean;\n};\n\nexport const productsReducer = (\n  state: typeState = initialState,\n  action: typeActionProducts\n): typeState => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { ...state, products: [], loading: true, success: false };\n    case PRODUCT_LIST_SUCCESS:\n      return { ...state, products: action.payload, loading: false, success: true };\n    case PRODUCT_LIST_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n  return state;\n};\n","import {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_RESET,\n  PRODUCT_DETAILS_SUCCESS,\n  typeActionProduct,\n} from \"./types\";\n\nconst initialState = {\n  product: {\n    reviews: [],\n  },\n  loading: false,\n  error: \"\",\n};\n\ntype typeState = {\n  product: {\n    reviews: string[];\n  };\n  loading: boolean;\n  error: string;\n};\n\nexport const productReducer = (\n  state: typeState = initialState,\n  action: typeActionProduct\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_FAIL:\n      return { ...state, error: action.payload, loading: false };\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { ...state, loading: false, product: action.payload };\n    case PRODUCT_DETAILS_RESET:\n      return { ...state, product: {} };\n    default:\n      return state;\n  }\n};\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CartAction,\n} from \"./types\";\n\nconst initialState = {\n  cartItems: [],\n  shippingAddress: {\n    address: \"\",\n    city: \"\",\n    postalCode: \"\",\n    country: \"\",\n  },\n  paymentMethod: \"\",\n};\n\nexport type typeCartItem = {\n  product: string;\n  name: string;\n  image: string;\n  price: number;\n  countInStock: number;\n  qty: number;\n};\n\nexport type typeAddress = {\n  address: string;\n  city: string;\n  postalCode: string;\n  country: string;\n};\n\ntype typeState = {\n  cartItems: typeCartItem[];\n  shippingAddress: typeAddress;\n  paymentMethod: string;\n};\n\nexport const cartReducer = (\n  state: typeState = initialState,\n  action: CartAction\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (el) => el.product !== action.payload\n        ),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_LOGIN_REQUEST,\n  typeActionUserLogin,\n} from \"./types\";\n\nconst initialState = {\n  loading: false,\n  error: \"\",\n  userInfo: {\n    name: \"\",\n    email: \"\",\n    _id: \"\",\n    isAdmin: false,\n  },\n};\n\nexport type userInfo = {\n  name: string;\n  email: string;\n  _id: string;\n  isAdmin: boolean;\n};\n\ntype typeState = {\n  loading: boolean;\n  error: string;\n  userInfo: userInfo;\n};\n\nexport const userLoginReducer = (\n  state: typeState = initialState,\n  action: typeActionUserLogin\n) => {\n  switch (action.type) {\n    case USER_LOGIN_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_LOGIN_SUCCESS:\n      return { ...state, loading: false, userInfo: action.payload };\n    case USER_LOGOUT:\n      return {};\n    case USER_LOGIN_REQUEST:\n      return { ...state, loading: true };\n    default:\n      return { ...state };\n  }\n};\n","import {\n  typeActionUserRegister,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n} from \"./types\";\n\nconst initialState = {\n  loading: false,\n  error: \"\",\n  user: {\n    name: \"\",\n    email: \"\",\n  },\n};\n\nexport type userInfo = {\n  name: string;\n  email: string;\n};\n\ntype typeState = {\n  loading: boolean;\n  error: string;\n  user: userInfo;\n};\n\nexport const userRegisterReducer = (\n  state: typeState = initialState,\n  action: typeActionUserRegister\n) => {\n  switch (action.type) {\n    case USER_REGISTER_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_REGISTER_SUCCESS:\n      return { ...state, loading: false, user: action.payload };\n    case USER_REGISTER_REQUEST:\n      return { ...state, loading: true };\n    default:\n      return { ...state };\n  }\n};\n","import {\n  typeActionUserUpdate,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_RESET,\n} from \"./types\";\n\nconst initialState = {\n  loading: false,\n  error: \"\",\n  user: {\n    name: \"\",\n    email: \"\",\n    _id: \"\",\n    isAdmin: false,\n  },\n};\n\nexport type user = {\n  name: string;\n  email: string;\n  _id: string;\n  isAdmin: boolean;\n};\n\ntype typeState = {\n  loading: boolean;\n  error: string;\n  user: user;\n};\n\nexport const userUpdateReducer = (\n  state: typeState = initialState,\n  action: typeActionUserUpdate\n) => {\n  switch (action.type) {\n    case USER_UPDATE_FAIL:\n      return { ...state, loading: false, error: action.payload };\n    case USER_UPDATE_SUCCESS:\n      return { ...state, loading: false, user: action.payload };\n    case USER_UPDATE_REQUEST:\n      return { ...state, loading: true };\n    case USER_RESET:\n      return initialState;\n    default:\n      return { ...state };\n  }\n};\n","import {\n  ORDER_CREATE_FAIL,\n  orderActionType,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n} from \"./types\";\nimport { typeCartItem, typeAddress } from \"../cartScreen/cartReducer\";\n\ntype initialState = {\n  error: string;\n  loading: boolean;\n  order: {\n    _id: string;\n    taxPrice: number;\n    shippingPrice: number;\n    totalPrice: number;\n    isPaid: boolean;\n    isDelivered: boolean;\n    orderItems: typeCartItem[];\n    user: string;\n    shippingAddress: typeAddress;\n    paymentMethod: string;\n  };\n};\n\nconst initialState = {\n  error: \"\",\n  loading: false,\n  order: {\n    _id: \"\",\n    taxPrice: 0,\n    shippingPrice: 0,\n    totalPrice: 0,\n    isPaid: false,\n    isDelivered: false,\n    orderItems: [],\n    user: \"\",\n    shippingAddress: {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n    },\n    paymentMethod: \"\",\n  },\n};\n\nexport const orderReducer = (\n  state: initialState = initialState,\n  action: orderActionType\n) => {\n  switch (action.type) {\n    case ORDER_CREATE_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case ORDER_CREATE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        order: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ORDER_DETAILS_FAIL,\n  orderDetailsAction,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  GET_ORDER_ALL,\n  ORDER_RESET,\n} from \"./types\";\nimport { typeAddress, typeCartItem } from \"../cartScreen/cartReducer\";\n\nexport type order = {\n  _id: string;\n  taxPrice: number;\n  shippingPrice: number;\n  totalPrice: number;\n  isPaid: boolean;\n  isDelivered: boolean;\n  orderItems: typeCartItem[];\n  user: string;\n  shippingAddress: typeAddress;\n  paymentMethod: string;\n  createdAt: any;\n};\n\ntype initialState = {\n  error: string;\n  loading: boolean;\n  order: order;\n  allOrder: order[];\n};\n\nconst initialState = {\n  error: \"\",\n  loading: false,\n  order: {\n    _id: \"\",\n    taxPrice: 0,\n    shippingPrice: 0,\n    totalPrice: 0,\n    isPaid: false,\n    isDelivered: false,\n    orderItems: [],\n    user: \"\",\n    shippingAddress: {\n      address: \"\",\n      city: \"\",\n      postalCode: \"\",\n      country: \"\",\n    },\n    paymentMethod: \"\",\n    createdAt: \"\",\n  },\n  allOrder: [],\n};\n\nexport const orderDetailsReducer = (\n  state: initialState = initialState,\n  action: orderDetailsAction\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        order: action.payload,\n      };\n    case GET_ORDER_ALL:\n      return {\n        ...state,\n        loading: false,\n        allOrder: action.payload,\n      };\n    case ORDER_RESET:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_PRODUCT_ADMIN,\n  AdminActionProductType,\n  EDIT_PRODUCT_ADMIN,\n  FAIL_PRODUCT_ADMIN,\n  FETCH_PRODUCT_ADMIN,\n  ONE_PRODUCT_ADMIN,\n  REMOVE_PRODUCT_ADMIN,\n  REQUEST_ADD_PRODUCT_ADMIN,\n  REQUEST_ALL_PRODUCT_ADMIN,\n  REQUEST_EDIT_PRODUCT_ADMIN,\n  REQUEST_ONE_PRODUCT_ADMIN,\n  REQUEST_REMOVE_PRODUCT_ADMIN,\n  RESET_LOADING_PRODUCT_ADMIN,\n  RESET_ONE_PRODUCT_ADMIN,\n} from \"./types\";\n\ntype typeState = {\n  loadingAll: boolean;\n  loadingOne: boolean;\n  loadingDelete: boolean;\n  loadingAdd: boolean;\n  loadingEdit: boolean;\n  error: string;\n  success: boolean;\n  successDetails: boolean;\n  allProduct: any[];\n  oneProduct: any;\n};\n\nconst initialState = {\n  allProduct: [],\n  loadingAll: false,\n  loadingOne: false,\n  loadingDelete: false,\n  loadingAdd: false,\n  loadingEdit: false,\n  error: \"\",\n  success: false,\n  successDetails: false,\n  oneProduct: {},\n};\n\nexport const adminProductReducer = (\n  state: typeState = initialState,\n  action: AdminActionProductType\n) => {\n  switch (action.type) {\n    case FETCH_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingAll: false,\n        allProduct: action.payload,\n        success: true,\n      };\n    case ONE_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingOne: false,\n        oneProduct: action.payload,\n        success: true,\n      };\n    case RESET_LOADING_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingAll: false,\n      };\n    case RESET_ONE_PRODUCT_ADMIN:\n      return {\n        ...state,\n        oneProduct: {},\n        successDetails: false,\n      };\n    case ADD_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingAdd: false,\n        success: true,\n      };\n    case REMOVE_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingDelete: false,\n        allProduct: state.allProduct.filter((el) => el._id !== action.payload),\n        success: true,\n      };\n    case EDIT_PRODUCT_ADMIN:\n      return {\n        ...state,\n        allProduct: state.allProduct.map((el) => {\n          if (el._id === action.payload.id) {\n            return {\n              ...el,\n              name: action.payload.name,\n            };\n          }\n          return el;\n        }),\n        successDetails: true,\n      };\n    case REQUEST_ALL_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingAll: true,\n        success: false,\n        error: \"\",\n      };\n    case REQUEST_ONE_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingOne: true,\n        success: false,\n        error: \"\",\n      };\n    case REQUEST_REMOVE_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingDelete: true,\n        success: false,\n        error: \"\",\n      };\n    case REQUEST_ADD_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingAdd: true,\n        success: false,\n        error: \"\",\n      };\n    case REQUEST_EDIT_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loadingEdit: true,\n        successDetails: false,\n        error: \"\",\n      };\n    case FAIL_PRODUCT_ADMIN:\n      return {\n        ...state,\n        loading: false,\n        success: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  AdminActionType,\n  EDIT_USER_ADMIN,\n  FAIL_USERS_ADMIN,\n  FETCH_USER_ADMIN,\n  FETCH_USERS_ADMIN,\n  REMOVE_USER_ADMIN,\n  REQUEST_DETAILS_USERS_ADMIN,\n  REQUEST_EDIT_USERS_ADMIN,\n  REQUEST_REMOVE_USERS_ADMIN,\n  REQUEST_USERS_ADMIN,\n  RESET_LOADING_USERS_ADMIN,\n  RESET_USER_ADMIN,\n  RESET_USERS_ADMIN,\n} from \"./types\";\n\ntype typeState = {\n  allUsers: any[];\n  user: any;\n  error: string;\n  loadingUsers: boolean;\n  successUsers: boolean;\n  successUpdate: boolean;\n  loadingUser: boolean;\n  loadingRemove: boolean;\n  loadingDetails: boolean;\n  loadingEdit: boolean;\n};\n\nconst initialState = {\n  allUsers: [],\n  user: {},\n  successUsers: false,\n  error: \"\",\n  successUpdate: false,\n  loadingUsers: false,\n  loadingUser: false,\n  loadingRemove: false,\n  loadingDetails: false,\n  loadingEdit: false,\n};\n\nexport const adminUserReducer = (\n  state: typeState = initialState,\n  action: AdminActionType\n) => {\n  switch (action.type) {\n    case FETCH_USERS_ADMIN:\n      return {\n        ...state,\n        allUsers: action.payload,\n        loadingUsers: false,\n      };\n    case FETCH_USER_ADMIN:\n      return {\n        ...state,\n        user: action.payload,\n        loadingDetails: false,\n      };\n    case RESET_LOADING_USERS_ADMIN:\n      return {\n        ...state,\n        loadingUsers: false,\n      };\n    case EDIT_USER_ADMIN:\n      return {\n        ...state,\n        loadingEdit: false,\n        successUpdate: true,\n        allUsers: state.allUsers.map((el) => {\n          if (el._id === action.payload.id) {\n            return {\n              ...el,\n              name: action.payload.name,\n              email: action.payload.email,\n            };\n          }\n          return el;\n        }),\n      };\n    case REMOVE_USER_ADMIN:\n      return {\n        ...state,\n        loadingEdit: false,\n        allUsers: state.allUsers.filter((el) => el._id !== action.payload),\n      };\n    case REQUEST_USERS_ADMIN:\n      return {\n        ...state,\n        loadingUsers: true,\n      };\n    case REQUEST_REMOVE_USERS_ADMIN:\n      return {\n        ...state,\n        loadingRemove: true,\n      };\n    case REQUEST_DETAILS_USERS_ADMIN:\n      return {\n        ...state,\n        loadingDetails: true,\n      };\n    case REQUEST_EDIT_USERS_ADMIN:\n      return {\n        ...state,\n        loadingEdit: true,\n      };\n    case FAIL_USERS_ADMIN:\n      return {\n        ...state,\n        error: action.payload,\n        loadingUsers: false,\n        loadingUser: false,\n        loadingRemove: false,\n        loadingDetails: false,\n        loadingEdit: false,\n      };\n    case RESET_USER_ADMIN:\n      return {\n        ...state,\n        user: {},\n        successUpdate: false,\n      };\n    case RESET_USERS_ADMIN:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import {\n  AdminActionOrderType,\n  FAIL_ORDER_ADMIN,\n  FETCH_ORDER_ADMIN,\n  ONE_ORDER_ADMIN,\n  REMOVE_ORDER_ADMIN,\n  REQUEST_ALL_ORDER_ADMIN,\n  RESET_LOADING_ORDER_ADMIN,\n} from \"./types\";\n\ntype typeState = {\n  loadingOrders: boolean;\n  error: string;\n  allOrder: any[];\n  oneOrder: any;\n};\n\nconst initialState = {\n  loadingOrders: false,\n  error: \"\",\n  allOrder: [],\n  oneOrder: {},\n};\n\nexport const adminOrderReducer = (\n  state: typeState = initialState,\n  action: AdminActionOrderType\n) => {\n  switch (action.type) {\n    case REQUEST_ALL_ORDER_ADMIN:\n      return {\n        ...state,\n        loadingOrders: true,\n      };\n    case FETCH_ORDER_ADMIN:\n      return {\n        ...state,\n        allOrder: action.payload,\n        loadingOrders: false,\n      };\n    case ONE_ORDER_ADMIN:\n      return {\n        ...state,\n        oneOrder: action.payload,\n        loading: false,\n      };\n    case REMOVE_ORDER_ADMIN:\n      return {\n        ...state,\n        loading: false,\n        allOrder: state.allOrder.map((el) => el._id !== action.payload),\n      };\n    case RESET_LOADING_ORDER_ADMIN:\n      return {\n        ...state,\n        loadingOrders: false,\n      };\n    case FAIL_ORDER_ADMIN:\n      return {\n        ...state,\n        loadingOrders: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { productsReducer } from \"../bus/homeScreen/productsReducer\";\nimport { productReducer } from \"../bus/productScreen/productReducer\";\nimport { cartReducer } from \"../bus/cartScreen/cartReducer\";\nimport { userLoginReducer } from \"../bus/authScreen/login/loginReducer\";\nimport { userRegisterReducer } from \"../bus/authScreen/registration/registerReducer\";\nimport { userUpdateReducer } from \"../bus/profileScreen/profileUpdateReducer\";\nimport { orderReducer } from \"../bus/placeOrderScreen/orderReducer\";\nimport { orderDetailsReducer } from \"../bus/orderScreen/orderDetailsReducer\";\nimport { adminProductReducer } from \"../bus/adminScreen/products/productAdminReducer\";\nimport { adminUserReducer } from \"../bus/adminScreen/allUsers/usersAdminReducer\";\nimport { adminOrderReducer } from \"../bus/adminScreen/allOrder/orderAdminReducer\";\n\nexport const rootReducer = combineReducers({\n  products: productsReducer,\n  product: productReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  order: orderReducer,\n  orderDetails: orderDetailsReducer,\n  adminUser: adminUserReducer,\n  adminProduct: adminProductReducer,\n  adminOrder: adminOrderReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { rootReducer } from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\n\nlet cartItemsFromStorage: any[] | null | string = localStorage.getItem(\n  \"cartItems\"\n);\nif (cartItemsFromStorage) {\n  cartItemsFromStorage = JSON.parse(cartItemsFromStorage);\n} else {\n  cartItemsFromStorage = [];\n}\n\nlet userInfoFromStorage: null | string = localStorage.getItem(\"userInfo\");\nif (userInfoFromStorage) {\n  userInfoFromStorage = JSON.parse(userInfoFromStorage);\n} else {\n  userInfoFromStorage = null;\n}\n\nlet shippingAddressFromStorage: null | string = localStorage.getItem(\n  \"shippingAddress\"\n);\nif (shippingAddressFromStorage) {\n  shippingAddressFromStorage = JSON.parse(shippingAddressFromStorage);\n} else {\n  shippingAddressFromStorage = null;\n}\n\nlet paymentMethods: null | string = localStorage.getItem(\"paymentMethod\");\nif (paymentMethods) {\n  paymentMethods = JSON.parse(paymentMethods);\n} else {\n  paymentMethods = null;\n}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage || {},\n    paymentMethod: paymentMethods,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nexport const store = createStore(\n  rootReducer,\n  // @ts-ignore\n  initialState,\n  applyMiddleware(thunk)\n);\n","//Core\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { css, Global } from \"@emotion/core\";\n\n// Other\nimport { App } from \"./element/App/App\";\nimport { store } from \"./init/store\";\n\nrender(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <Global\n          styles={css`\n            body {\n              margin: 0;\n              padding: 0;\n              font-family: \"Arial\", \"sans-serif\", \"FF Meta Serif\", \"Bree\";\n            }\n          `}\n        />\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}